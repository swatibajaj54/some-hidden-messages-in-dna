from ori_finder import (
    get_skew_diag_data,
    count,
    get_hamming_mismatch,
    get_pattern_match,
    minimum_skew_value,
    get_approximate_pattern_match,
    frequent_words_with_mismatches,
    get_approximate_pattern_count,
)
from neighbors import neighbors
from motif_finder import (
    probability_matrix,
    consensus_motif,
    score_matrix,
    gibbs_sampler,
    many_runs_gibbs_sampler,
    greedy_motif_search,
    greedy_motif_search_with_pseudocounts,
    median_string,
    motif_enumeration1,
    profile_most_probable_k_mer,
    entropy_matrix,
    distance_between_pattern_and_string,
    best_score_from_random_motif,
)
from ori_finder import frequent_words_with_mismatches_and_rc
from genome_assembly import (
    string_composition,
    string_spelled_by_genome_path,
    overlap_graph_problem,
    de_bruijn_graph,
    de_bruijn_graph_from_text,
    eulerian_cycle_3, eulerian_path, string_reconstruction, k_universal_circular_string, read_pair_composition,
    string_reconstruction_from_paired_de_bruijn_graph_path, sring_reconstruction_from_paired_reads, max_non_branching_path
)
from sequencing_antibiotics import (
    protein_translation,
    peptide_encoding_seq,
    linear_spectrum,
    cyclic_spectrum,
)

# def readFileForEulerCircuit():
#     content_list = open("dataset_203_6.txt", 'r').read().splitlines()
#     dict = {}
#
#     for item in content_list:
#         res_arr = item.split(": ")
#         if len(res_arr) != 2:
#             print("file format invalid")
#             break
#         val = (res_arr[1]).split(" ")
#         int_vals = []
#         for character in val:
#             int_vals.append(int(character))
#         dict[int(res_arr[0])] = int_vals
#     return dict
#
#
if __name__ == "__main__":
    dict = {1: [2],
            2: [3],
            3: [4, 5],
            6: [7],
            7: [6]}
    output = max_non_branching_path(dict)
    # f = open('dataset_204_16.txt', 'r')
    # file = f.read()
    # arr = file.split()
    # res = []
    # for item in arr:
    #     items = item.split('|')
    #     res.append((items[0], '|', items[1]))
    #
    # # for item in file:
    # #     text = str(item[0]), str(item[1]), str(item[2])
    # # print(file)
    # # patterns = [('GAGA','|','TTGA'), ('TCGT','|','GATG'), ('CGTG','|','ATGT'), ('TGGT','|','TGAG'), ('GTGA','|','TGTT'), ('GTGG','|','GTGA'), ('TGAG','|', 'GTTG'), ('GGTC','|','GAGA'), ('GTCG','|','AGAT')]
    # d = 200
    # # k = 4
    # output = sring_reconstruction_from_paired_reads(res, d)
    # print(output)
    # text = [('GTG', '|', 'GTG'), ('TGG', '|', 'TGA'), ('GGT', '|', 'GAG'), ('GTC', '|', 'AGA'), ('TCG', '|', 'GAT'),
    #  ('CGT', '|', 'ATG'), ('GTG', '|', 'TGT'), ('TGA', '|', 'GTT'), ('GAG', '|', 'TTG'), ('AGA', '|', 'TGA')]


  #   text = [('AG','-','AG'),
  #           ('GC','-','GC'),
  # ('CA','-', 'CT'),
  #  ('AG','-','TG'),
  #   ('GC','-','GC'),
  #    ('CT','-','CT'),
  #     ('TG','-','TG'),
  #      ('GC','-','GC'),
  #       ('CT', '-', 'CA')]

    # output = read_pair_composition('TAATGCCATGGGATGTT', 3, 2)
    # print(output)
    # res = ""
    # for item in output:
    #     element = "(" + item[0]+item[1]+item[2] + ")"
    #     res += element
    # print(res)

    # string = k_universal_circular_string(3)
    # graph = de_bruijn_graph(['000', '001', '010'])
    # print('graph:', graph)
#     content_list = open("dataset_203_7.txt", 'r').read()
#     content = content_list.split()
#     print('content', content)
#     string = string_reconstruction(content)
#     file = open('string_contruction', 'w')
#     file.write(string)
#     file.close()

#     adjacency_dict = {
#         0: [2],
#         1: [3],
#         2: [1],
#         3: [0, 4],
#         6: [3, 7],
#         7: [8],
#         8: [9],
#         9: [6]
#     }
#     output = eulerian_path(readFileForEulerCircuit())
#     print(output)
#     for item in output:
#         print(item, end=' ')



#     amino_acid_mass = {}
#     with open("integer_mass_table.txt") as f:
#         for line in f:
#             (key, val) = line.split()
#             amino_acid_mass[key] = int(val)
#     peptide = 'LEQN'
#     alphabet = ['G', 'A', 'S', 'P', 'V', 'T', 'C', 'I', 'L', 'N', 'D', 'K', 'Q', 'E', 'M', 'H', 'F', 'R', 'Y', 'W']
#     print(cyclic_spectrum(peptide, alphabet, amino_acid_mass))
#     # print(linear_spectrum(peptide, alphabet, amino_acid_mass))

# with open('data.txt') as f:
#     rna_sequence = f.readline()
# rna_sequence = 'AUGGCCAUGGCGCCCAGAACUGAGAUCAAUAGUACCCGUAUUAACGGGUGA'
# print(protein_translation(rna_sequence))
# with open('data.txt') as f:
#     dna_seq = f.readline()
# peptide_seq = 'RVGREENV'
# dna_seq = 'TTCGAATCCGTATTGCTTTGGTTGGTTGAGAGAGCGACCTACATTGCTAGTCAGAATAGGTGATTCACACAAAGCTTAGCACCTGGGCAGCACCCCGTGATGTAAACCTATGGGAACTAAGGGAGTCCTGCGGTTTTAGCCAGCAAGCGAGCCGGCAGGAACACTCATACCATCGGACGCGTTTGACGCCTCCCCGGAAAGGAAGTATTTGAGCCTCATTATTACGTATTGCCCGTTAGTCGACAAATCAAGCCCTCGTACGCAGCTTATTCGTACGACGTGGAGGCGTTCCCACGGGCCTAACACGATTGGAACACCACCATAGTAGTGTGGTTCAAATACCTCCTTTGGAGATCTAGAGCTTCACTCTGATTCTAGAGGCAACTTTACAATCGCTCTACGAAATTGTATGGACATCATCAACCGGATATTCTGGGGCGGTAGAATTTCTTTTGTTCGAATCGCTCTAGGCCAGGATCAAATTAATTGAATTGCGGACTCAAGGATCGCGATAGCCGACACATCGGACGCTGTAGAAAGCCAGTCTCTGGATTTAATCCACCCTCTATGTTTGACAAAGCACTAAAACGGGATAGTTTCGGGTGGTATAAGTTTCCCAAGACGATTGCATCGCAATTCATCAACAACCATGAACTTACTGTTTTAGTACTTCCACACACCTTGTTAAATTACGCCTTTACTTCATGTTGCGGTGTGTGTTAGATAGTGTGCAGCTACAAGTCTACCGCCATCGCAGCTCGGGATACCGGCAGATGAGATGGTCCTGAGCTCGTACCGGACTCAAACTTTTTCCTTTACTACCTAGGAATCGCCCATGCGAATTTGTCGGACACACACCATTACATTAACGTCACAACAGCTACTGTTAGAATTTTGCTCTTGCAAATCCTGGAAAGAGTTAAAAAAACTCTTCCGCGCGCCAATAGGGTAAATAATAGATAGCCAGACGGCTGTAAGAGGTGATGACATTTGCAACAATCATGCTGTCGCATCTTCCGCAAGTTCATGTCGCGCCTAGGCAATGGATCTGCGAATGGGGGCCACGGGGTATGAACTACGGAATTCTAAGAAAGTTGCCATCCAGAGTTAAGGGTTTGAGGCTAGTTGCATCGCTGGTAACGAACTACCTCATTACTTGGACGCGCAGTGTGACTTCACTCCTGTATAGCGATGATGCCAAGCAGGAATTAGCAAATCTGAAGAGCGTTTCCAAACTGGCCACTTGGACTGACACCTATCGCGGGGGATTTCAGCGCGTGTCGCTCTCACATGAGAGCTGCCGTCAGGAGCGGTAGAGTTTAGAGAGGAATGCGACAAACTCCCTATTCACCTCTCTGGTGATGTAAGGATATTTACGCTTAGTTCTATGCCAGGCTTAGGGCCTCTCGGAACTTTGGTGAGTCCTTATTAATTGATGCTACCTCTCCCTTACCTTCGCCCCAAGTCACGTAGAAGTACTCAATCCTGCTACATGATAATCAAATATTTCCAACGTTGGGAAATCGGTGACATCACATACTAGTTAAGAAACCACTGTCAGTGAACTTATATCCGGGGGAGAAAATCTACTAACTTACATACGCTGTGCGAGCAGTTTTCATTATAAGAAAATATACTCCCGAGGTACCGCATCAAGCACGACATTCCCGGAGAGCATAACATTTCGGTGCACCTGCTTTTGTGCGCTTGCTTGCGGTTATTTATAAACTACGCACAAGGCGCAAACCGCAGTGCGCATGTTTTCTCCGCCTGGCTAGAACTCGACATTCTCGTCAACGCCAATCTATGTGAGAGGATTTAGACCTCTGTGAAAACGAGTCCCTCTATAGAATAAATACCCAGATGCCAATGGGGGTTCTATCCGATGGCAGTGCATGGAGTGGTGGCTCCAGATTAAGGATGAGGAGAGGTAAAGATAACAGTTCGGTCGCCACGACGCGTTGCCAATCGAAATATCAGTACTAAAAGGCCCACCGCTCCGCTTTAGTCCGACTTTACATCCTGTGGAAATTGTCGAACGGAGGCTACATCGGGCTATATGAGTGTGAAAACCTATACTTCTCGCGTCGTTACTCAGTGCCGGTCTCCTGTTTCCCCCAGTCTTACGTACCCTTATTGATATTTGCTTCACGTTGAAACGTCCTAACGCAGCGTAAAGAGGTGTTTGAACCTCATTACTATAAAATCGCGATCGAAGGTAGACTACATACGCAAACGCCGAAACCCTCAGTTGGCCTTGTTGCAAGTATGGAACGTTGTAAAATTTTTCCTAGACGTTGAGCTATCGGTACAAGGTCGTTAGCGTCCTTACCCTTCACTTATATGCCCGACAAAACGCGGGTCCTAGTGCAGTGGTGGGAGCTTGGAATCCCGCAATACAAGGACAACCTGTATCTCGTTCGGCGTTCCGCGATCACTCGATCCCGAACCACTCCAAGCCTGGTTGATCAGCAAAAGCGGAAGGATGGATAAAGGGCTACTGGTTAATGGATGTAAACTTCCAATGATGAAATCCTGGAAACGAGGGATCGGGTTACGGTGGCGAACGGGGTACGGCAACGTGGCTATCTAGAGCCCGACGTTACGACTCATGTACATGCTGCTACGTGGTTGAAGCTGACGTTCAGATGAAGCAGTACTGAGTCCTAGGGCTTACTACTACTCCAATAGGTCTGGCCGGCCAGATACAAAAGTTCGTGGCGGCTCACCCCCTTTCTGGCGGGTGTAGCTTGCTGACCGGTTTGCTCGATAACACAGGCTAGCGAATAGTAATGAGGTTCGAAAACCTCTTTCCAACGACTGAAAGGGTCTACACGAACTATCTACATTTCCCCGCCCATGTCCTTCCGTCTGGTTGCTTCTGGAGATCCTTTCGCATTATACCGCAGCGTAGTGGCTCTGGCATATATGAAAAAATCCTTCTGTGGGTATTTGTGCCATCACTTATTGTTCGTACCGATATGGGATTACAAGTGCGATGTGATAATAAGCGAAGAAGCCAACATGTTACACTGTTCATGCGCTCCGGGTAATGTGCGGGCACCATGCTCAGTTCCCGCTCGCAGTTGTCACTGTCCCTGTTTCGGCACCATAATCAACATTTCCACGGCCACGCTGGTGAATAACCGAGGATACCGAAGTACAGCAAGAATGAGAGCGGGACTCCTCCATCTGCTTGTAATACGCCTTCAAGATAGTCCATAAAACGGTCGGGGTCTTGTTTCGGACTAGCCGCTTTGAAACGGTGCATAGTTGTGTCAAGTGTGGACATTGGCTTTCTATCCTCGTCAGCGATCCTCGGAAAGACTCGGGCAGTCGCCCCGAATCGTAATTAGGTAGTAGTGCGGCTCAAAAACTTCCTTCGACCTAACCGCTATAATGTTCGTAGATATAAATTTCGTTTCAGTATTAACAGGCGCACCGTATATATACGGAATGGTGTCGCCCCATTAGCTGCTCGCCAATATTTATCTAAGACCGCGCGCGTCTAGCGCCTTTAGTAGTTGCACCCGAGTATAGTAATGGGGTTCGAAGACTTCCTTCGCAAGGCTGCCATACTGTATCACAAGTACTGACGGAGCCCCGGAGGAGTGCAGGATACGGCAAAGGAGACCATTACCGGGGCATGAGTCCAAGTTAGCCCGTTAGGTGAAGGACGCTGATACAATAGTGAATCCGTTACTGAAAGGTTTAGAAGACCGGGGGGCTCGCACTAGGTCCAAATATTATGAACCCTACTCCTGCAACTGAATTGGCCGTCCAGGCGATATTTAAAAGGGGTTACTAGCAGGTTCATCGGAGCCCGTACTCCTTCCGGGCATAGTCGTTCGACGGGTAGAAATTCATCCAGTCGTGCCGGATACCCCGAGAATACCCCTATTTTTTGATCCTTCACCATCATCGTCCGCGGACTCATCTAAGTACCTCAGACCGAAACTGTTATCGTAGCGAAGAGCGAACTCGAATGACATCGCTTGTCCAACAGGGAAAATATGTAAAGTATATGCAGATTATTATAGGAAGATCACAAACTCCATCGCGCCTAGGCCAAAGACTTGCCAGAACAACATCTCTTCCAGAGCAAGGAAGTGTTTGAACCTCACTATTATCGAGAGAAGTCCCATGAATTTATAATAGTGAGGCTCAAAAACTTCCTTCATCGTCGGGCGCTGGGGCGAGCTAGGCTTCCCTAGCCGTCATTACTGTACCCACGCCAAATATTATCGAGTATGACTACGAAGCCTTCACAAGGGGCTGCAGTAACAGACTAACTCACGCACACCGCAACTACTATCCTAAATTGAGTAAGAAAACCCTCGACTATAGCCCTTGAATTAAATTCGCTATTTAAGGAAGACCGCGCTTCCGCTCGCCCGCGTATAGTTTACCAGTCCCAAGAAACATGTGTGGCCAGCCTACCTGAAGAGCTGTGTAAAGATAGATTCTGACATCCTCAAAAAGAAGTTTTCGAGCCGCACTACTACGCACGGAGCTCCGTTATTCAAGGCATGTCGAAGTACAGCGTGGTGGCCTCTCCTGTTCTCCACCCCAGCTAAACCCACCTTGTTCGAATTCGCGCAACTGTATATGACATGAACACTTACAGGGGTTAGAAGTTACTGCAACCAAGATAGAGCTCGTCGAAGTAATAGTGCGGTTCAAAAACTTCCTTCAATTGGTCTCATCACTTAAATTTAAGAGCTATTGTGAGTACAGGTACGGATGCGGCTTCAGTGGATCTTCAGCATTCATTCCTTGTAGTAATGGGGTTCGAAGACTTCCTTGCCAGGGTACCAAACAAGTCTTGCGCATCCTCCTCCCTAAGGAGGTATTTGAACCCCACTATTACCCACGATAGAACATGCAGGGTTTGATAGTGGAACACCTTTTAGAATCTGGGGATAAATTCCCAGGACTAATGTATGGCTGTAGTAATGAGGTTCAAAAACCTCCTTTTCAGGTGGATCGCAGGCCGTGCTGCCTCACAAGCTGGGACGCCGTCCACGGTATAGCCGGCGTCGGCAGTTACTGTGAAATAGCGGAAACTCGATCCCAATATATCATCTTACGTTTGGCGCCCAATAGTCGCCCAGTACCCGTTGACAGTTCTTTAACTCGGCTTAGAACTACTAGACAGGTTCAACCGAACCTTGCCCTAGTTCCCACTCCCGTAATTCATTTGGGTTTGCATCTAGAATACTGGAGGGTGCATAGACGAAACGTGTACGTCGGAGAAAACGTAAGAAAATGACCTAGACTCATAGTAGTGAGGTTCGAAGACTTCCTTTCAGTGAAATCGATCCACCACTCGCCGCGAAGAGATAATAGCATAGAGCACAAGTGCGCGAGTAGAGAAAAAGGCTATCCCAACCGGGCACGTCCTTCGTGTTTGGCGTTTACATACGGCACCCCGTTTCTGCACGTTAACCGTCTAGTATCCAACGGTGGATGGCGGACGCTAGACTATAGATATGAGATATCGAGACCTGGAGCTGGGTGTGGCTGCAGCCCGGGTCATTGCGGGCTGTGAATTCAAGGGCATGTAAACAAGCGTATATCGAACAGTGGATGGGCACCTGCAATACTCACGGTAGAGTTAGCTCACAGGATTCACGTTGAGGACTATGAGTCCCTCTTCGCTAGCAGTCTGGGGGGATATGGAGTTTAATAGCTTGACGTAGTAATGGGGCTCAAACACCTCTTTGTGTGAGCACAGCTACTTGCATTAAGAGATTCTAAACAGCGATCATCTCGGCTATTTCGGGCCAGCCTTTTCGGCAGGATGTTATGTAGCATTTCTGGAAGCTTCCCCCTCGAATCTACTAGTGGTGAGAAGATGCCCCACCGATATTACTCTTTAATCTTGAGAAACCTAAAACCGATCTGACCTCAGACGGGCGGCTCCCACCCGAGGATAAACTCGTCAATAATAATGTGGCTCGAACACTTCTTTTCTCACTAGGCTTTTACGACACGCCACATGTATTTAAGCATCTACCTAACTTGTGTCTGCTGATATACAGCGCATTCTACGCCCAACCTACCAATTACTTCAACGTAGTGCGTGGCTAAAATTCAGGGGAGCTTCATCTCTGTCTTAATTTGAAGGTTCTTCCGGGGCGTTTGGGAATCTTCGTGCCTTTTGCGAGGTTAAGGTATCAAAGAAGTTTTCGAACCACATTATTACCGCCTTAAGCACCGGCGCATCCTGCTCGTGACAACTCTACCCTGCCCTGATAAAGGCACTGAACGTTCCAGAGAGTGCATCATTGACACGCGAGCAGGCCACAGTAGCCACAAGACGTATGGGTGATTATAGAATTGGTGGAGGTGTTGTTAACGATCAGGAGGACATTAGTGGGAGTTAGGAAAGACCCTATGTTCTCTCTATCGCGGACTTGTAACTTGACAAGCAAAAGGGTAAGAGAGCTGCACACCGAAGCAGGCCCTTCCTATACCTGTTTTTCCTACGCGTAGAGAGGAATCCAGAAAGGTGATAATTGGCATTCGATGAAAAAACAGTGTGCCACTGACTTAGTTCTATATGTGAAGAGCCTGTTAGCACGTGACGGCGGCCTTGGTATAGAGCCCTTAATGGTCTCCATCGCGTAGTAATGGGGCTCGAAAACCTCCTTACTTGGGATTGCGTGGCCTCCTTGTGAGTCATACACAAGGCTTAGGGCTATGGGGCGATACACTCCTTTTCGCGGCGCATGGGGCGGTGATGCCTACATAGTAGTAGTGACTGCCTTTCTGGGGGGCTATTTGTGGATGACCAACACCTGACCAGCGATGCAATCGCTAGGGGAGGTACACCTCTCATATGTTACAACAATCACCGAATTGTGTTTCGAATTCGAATCAAGTTTGCGGTGTCGACCAGATCTGGTCTTGCTGCCATACCGGGTTCGCCGCCTCCGGTGGATAGAACTGCATCTTAAGACATCTGGACCCAGCGGTAAGTAGCGGGAAGAGTTTAGAGTCATTCGTACAACTACAGGCTAAGGGCTTACTGGGGAGTTGTTGTAGGGCATAAAGATCGCCCCATGACTTTTCGTACTTTCCCCGATAGTTCACTCGCAGCGAGCTGCGGCTGGGCTTCGCCACACGAGTACGGGCAACATTTATCTCCTCTAATCACTGGGCACCGCGCGAGGAAATAGAAAACCCTAATCAGTGCTCATGGGCGCATCTATTGGTCTCCGCATGCACGATGCCGCGGAGTGCTTAGTTGTCCCTGCATAATCTTCGTAGATGTATAAGAGATTACCTATTTATTCGGTTTCGGTTCTAGACGTACCTTGCCGCATGAGTATAGGCTAATGAACTGAGTTGGCGCCAGAGGGAAAGGCATAATAATGCGGCTCGAATACTTCCTTAAGGAAGTATTCGAACCACATTACTAT'
# # dna_seq = "ATGGCCATGGCCCCCAGAACTGAGATCAATAGTACCCGTATTAACGGGTGA"
# # peptide_seq = "MA"
# res = peptide_encoding_seq(dna_seq, peptide_seq)
# for item in res:
#     print(item)


# text = 'AAGATTCTCTAAGA'
# k = 4
# print(de_bruijn_graph_from_text(text, k))

# patterns = ['GAGG', 'CAGG', 'GGGG', 'GGGA', 'CAGG', 'AGGG', 'GGAG']

# patterns = ['ATGCG', 'GCATG', 'CATGC', 'AGGCA', 'GGCAT', 'GGCAC']
# print(overlap_graph_problem(patterns))
# res = ''
# with open('data.txt') as f:
#     patterns = f.readline()
# # genome_path = ['ACCGA', 'CCGAA', 'CGAAG', 'GAAGC', 'AAGCT']
#     patterns = patterns.split()
#     res = overlap_graph_problem(patterns)
# f = open("genome_assembly.txt", "w")
# for key in res:
#     f.write(key + ": " + res[key])
#     f.write("\n")
# f.close()


#
#
# f = open("euliar_path.txt", "w")
# res = eulerian_cycle(dict)
# res_str = ' '.join(map(str, res))
# print(res_str)
# f.write(res_str)
# f.close()

# # genome_path = ['ACCGA', 'CCGAA', 'CGAAG', 'GAAGC', 'AAGCT']
#     res = de_bruijn_graph_from_text(text, k)
# f = open("result_de_bruijn_graph.txt", "w")
# for key in res:
#     f.write(key + ": " + res[key])
#     f.write("\n")
# f.close()

# text = "CCTTTGATCTCTTTACTATTTCGTTCAAATTCAATTCGCCTGACATCGACGGTTGACTTGCAATTGCCGCATCCCGAGGCTGACCTCCGCGCTGAGAGTGCGAATCTGTCGGAATTCCGCGGCCTTAGCAGCTCTCGCAAATACGCAGGCAACAGGACCCCGCTGAGGCCCAGGCCTGTTAATTTGTAGGCTGAGCTACCACGATTGAAAAGCAAAGATGACCTCATACTTTTATTAATGTATTTATCGACAAAATCTGTGTAATCTACCATTACGTGGCGCGTTCCGTAAGCTGTCTGCTCTAATATTTGCGGAAGGTAAGTTAAAGCGGAAAGTACTGCTAGGGTAGCAACTCAGTGATCAGCTGATTGTCAAACGAAGTTGCTAGGCTCCGGAAGCCCGAGTCCTTATATCAAGCACTAACAAACGAAACGCGTAGTAGCAATCCTGTCAGAAATTCTGCCCGCTAAGCCCGCGCTCACATTACATGCGGCTTTCTATCAACCCTGGGCTTACGTCTTCGCGAGCTCAGCCCTATGATCGTCTGTATAGGAAAGGACTAGCTGAAGCTGGGCACCACTGTGAGAATCTGGCACCGTATATCCGCATTGGCATATCCGTCATATCCTCATATATTTATCAAGAATAACAAATGCATCACCAACTTTGACGTTCTCCTGGTGAGCGCTATCTCCGTAGTGCCCAGGGAGGGGATGCAGAATCGAGACTCTCGTCCTGAGGCTAAATAAGGGACACAGAACATCGGAGTCCTTCATCGTGCGTCTTTCTTGGAGCCTCGGCATATCAGGGTACGAGGACCGATCAAGGCTGTTGAGGCCGCCACGATTTGACAGATTGCTACTGTCGTGGTCACTAAGATAGCATCGGAAGGCGCGGGGCTTGTCTTCATGCTTGGGGCTTAACCTGGTACAAGTGAGCATTACCCAGAACTCGTGTGTCGTATTCATATCCGCAACAAGTCGCCGAACCCTCTATATGTCACAGACGAGACTGCTGATGGTCACTTTGTGCGCTAGGTAAAGACGGAGTTGTAGGCATTCTGGGAGAGCTTTCGCCCCGGACTGGATCCTTGTGATTTTCGAGAGTATAGGTATCCCTGGCTTCACTGGGGGAGCGCACTTGTAGTTTGACTGGCAGGCTAGCATACTTTACGCAAATTTTTTCCTCTTGACTACCTAGTCGAGTGCCTATCGTGCTATTCGGGGTCAGATTCATAATGGGTTCGCTAATAGTAGATAAACTATGTGAAGTCAGTAATAACGGTCAATGGCCGTGTGCCAGCTCCTCGGGATGGCAACTTCACACTAGACCTAAAAGCTACTCTGAGAGGAGGGAGGTGTTGGTTAAGGGACTACCTCTACTGACTCCACTTGCCCGAATCCTCGGAGTTTGTTATTGTTACTATGGGTGGGAACCCCGCAAGTCGCGAGCCCAGGTGAAGCGGTAGAAAGTGGATGTCTAAGGTCGCATGTGGTAATTCACGGACACGATACGTAAACACTACGTCACCAGAGTTAGTGAGGTCTATCTCACCTATGGAGGAAGTACGACGCTAGTCCCACCAGGACGGGTGGATCTATCAACCAACTAGGGTAAAGATCACTTTTTGTCAGCCCTTGCTCAGTTGAGACTCCAGATTGATAAGGAGCTTGCGCGGCTTATGGTACGAAGTAGGCACTGTAAGGTGTAGATACGTTGTTATCGGCTTCTATGTGCGTCCATACCACAAGGCAGCTATGGAGAACAGATCGAGGAATACATATCTGTACAGGCGTATCTGCACCGGAGCGTCCGTGCTCTGCCTGGCGCGCAATGGTTATGTTTCTAGCTCCGGAGGGCGCTCTAGTTGGGACAATTCCAGTCAGGCGGACGGATTTGACCTCCACTCCGGTAAATGAATTCAGGTAACATGTAACAAAAGGAATGGATCTAAGACACGGCCTGTGACTCCCCTCTCATCGTTATAGACGTTTAAATATATTGCTGGAAGCGGGATCGAATTGGTCGCAGGTGTGCTCTGTAGATCACCGCTTTCCGAACGGTACCAGCTGTACGTAAAGCTTATAGGTCGACCTCGATGCGCTTCGTCCAGGAGGGGCCTTTGCTGAATACGGCGCCTTTATTTGAGCCTCAAGCCTTACATCGGTCGTGTGACTCCCGGGTAGCTTGATGATCATATCTAGTCGGGGAGATGGTTAGCCGACTCTTCTGTTGGACTCGGGCAATAAGAATCGGTGCTTCCGAAGCCGTGGGCAAATTCCTTCGGTGTAAAGCTACAAAGTTGGACTGCTACGCCCGCGATCTAGACCCCCAGTGACTCGTGCCGGTGGTGCATATGACGTTACCCTTTTCCCGCACGCATGCCCATGTTTGTTTCAAGGCCATGAACGCCCAGGAGTGGCGTGCAACTTTTAAGGCGATAACCAGCCAGACTCTTGATATCCCTATTTTGTCACAGTGCATAGAGGTGGTAGACTTTAGCAAACATGATAACACAAGGCATGCTTAACGATCGGGTAGTATGCTATGCTAACGCCGCCATCCGTGTTGTACGACATCTACTAACACCCTACGAGATAGGGGCCCTATTTCTCGGCTCGACTTTATTAACACTCACCGCGACTTCCTGACGCCATCGCCGGGCACGTCAACGGGTCAGAATACGTGGCTAGTGCTAAAAATCCGTCACCCAATCGGTTTGGGCGGCGGGAACGTGGCCGCCAGAGACCCGCTCAGAGTTGAGACACAGGTGGGCGATTTGACCACCAGAAGATAAACATCTTTCCCACCTAGCTTGTAGTCCGTGCAAATGAACCAACATCCATGAATCGGACTGCAGGGTTAACCCGTCAATTTCAACTTTTATGGCCTAAACCAAGTCATGAGTGCCTAGACATTTGCCTAGTGGGAGCCCGAAGGTAGCGAATTACGGCGAGGTCTAGCAGCGCAGCTGAGTCCTCTGGCGTGCCTGGGACACTGCTTTGACGCAATGCAAGGTGGAAGGCCGGGTATTGGTTTCTATATTGCCGTTGACTACAATTACCTGGCAAGCTCGAGCACCATAGTCAAGTTCCCTTAATTTACTCTTCGGATTGAAGCCACTCGTTCCTGGCTATGACATCGGGACCATTGTAGATACCTTGTCTTCGCTTGGAATACCTCTCCCACATGGCTACCCTTCTAAGTAACATATACAAAACCAGCAGTACACCTTTGGGTACCTTACTGAAAGTACCGTCCGACCACAGGGGCTTTTCCGTCAAGGAGGTTACGAGCTAACGAAGTTTAGTCCTCGTCTTATAAATGTAATCGGGTACTTGGTCTTTGGGAACCGGTGTTATGCCCATCCCATAGCAAGCCCGGAACGCGTAGCTGAATGGTTTCGCTAGAGCCCAACCGGTGCCGAGTGTTGCCTGCGTGCCATATAACGGGCGTAACATTGTTGACCTGTGCCGTCAGGCTCAAAGTGAGTAGATAAAAATTTCCAGTGTATGACGGGGCATGCTATTTGCTCGTCCCGCGGGCAAGAATAGTCTTCGCGCAAACAGAAATTCGAATCCTGAAAGGCTTACAGGGTTACCTGAGGAATGTACCCGGGCCTCTAAATACCGCCATCGGCAAACCGCCCATCTCTGGTTCGCGTAATCTGGCGTGTCCCGACATGTTCACGCCTAAACCCAGGTTTCAGAGGGCTAGACTGCCTGATCTACGACGGGGATGACTGGAACAGATACCTTGATTGATCAAGTTACGGTGAGTACGTCATCATCTCATATGAAAGAGGGAGTATCCACAACTTTACATTAAGGCCTGCGGGCCTCGGTAAAGAACAATCTGCATCGATCCGGTAGTCAGAATTCTACATCTGCGCCTGGTAACAGCACCTCGACTTTAACTTTCATTCAATTATGAATTCTTTAGCATATGTGCTTATGATGCATACTTGCTAACTCTGTAGCAAGGAAACAGGGCACGAACTCTATTATTCGGTATGTCACGGACTGAAGCCAGGCTCAGGATGGTTGACGAGTCGAACTTCTAAGCGCCTTTTTTTATGCGTTCGCTTGGGTTTCATGGGCGTGTACTTAATGTTGGCCTGCCTTTCGAGAACAGCGGTCACAGCCGCTAGTATACAAAAACTCACGCTACGTACGATAAGTTCTGACAACACCGAAGTGGGTCGGAAGTAGTTCTTCTAGAGATCGATATAAGTCCGATTCGTGCTAAAAGTAGTTAACACCGCAGCGACGATCGTATGGCTCGAGAGTGGGCTGGCTTGAATCTGACGTCGATGAGGCCGGACTCCCATAATGGAACTAACGGATGAGTGAATGTGTCTAACGCGAGCTAGGCACGGTGCGGCACGCTCCGAGGGCCGTATAAAATGAAAGAAAAGTAGTCCTACAGCGATTGGCGTTAGATACTATAGGTAAATAAGCATTCGCCCGTATTTCATTATCTCTACGGCGTTGAAGAATAACGATACGGAGCAAGCCGCAGGCTAGCTTTTCGTGCTGTCCGTTGGGCAAGCATAAAACGCCTCAATGGCTACTCTGTACGTTTCAAGTGCTCGATTGCCGCACACCAGAAGCAGGTAACGAGTCATTTGTTCCCAAAGAGTGTTCGCATCGGTTTTCTTTATTACGACAAAATATGCCCAGATAGCCAGCAGGGAGATTGGGTAGTAGGTCGCAAGGATACGTAGTCAGGATTCAACGAAGACTAAGAACCTCGTTCGCAGCAACGAATTCCCTAGACCGGCATGGGAATGGTGGAATAGTTACTACAAATCCCATCAGATGGGTAGCCTTCCTACCGGGTGGCATATTCGCAGGTTTGATTCCGTGTCTACAGGGGGGTAAACACGTGGAAAAGGGCTCGGCCGTTACACTGCTAGTTAAGCCTGTAAGGGCCGCATCTAAAGATCACGGCGAGCTGTCGAATCCGGTCTCACGTTACCGTCTTTATCTCACTTACTG"
# k = 100
# res = (string_composition(text, k))
# f = open("result.txt", "w")
# for item in res:
#     f.write(item);
#     f.write(" ")
# f.close()

# dna = ["CTCGATGAGTAGGAAAGTAGTTTCACTGGGCGAACCACCCCGGCGCTAATCCTAGTGCCC" ,"GCAATCCTACCCGAGGCCACATATCAGTAGGAACTAGAACCACCACGGGTGGCTAGTTTC", "GGTGTTGAACCACGGGGTTAGTTTCATCTATTGTAGGAATCGGCTTCAAATCCTACACAG"]
# k = 7
# # genome1 = 'CAGAAAGGAAGGTCCCCATACACCGACGCACCAGTTTA'
# # genome2 = 'CACGCCGTATGCATAAACGAGCCGCACGAACCAGAGAG'
# print(best_score_from_random_motif(dna, k))
# motifs = ["ATGGC", "GGTCA", "GGTCG", "GGGGC"]


# open and read the file after the appending:


# dna = ['CGCCCCTCTCGGGGGTGTTCAGTAACCGGCCA', 'GGGCGAGGTATGTGTAAGTGCCAAGGTGCCAG', 'TAGTACCGAGACCGAAAGAAGTATACAGGCGT', 'TAGATCAAGTTTCAGGTGCACGTCGGTGAACC', 'AATCCACCAGCTCCACGTGCAATGTTGGCCTA']
# dna = [
#  "GTAGGTCAAACCGGGTGTACATACCCGCTCAATCGCCCAGCACTTCGGGCAGATCACCGGGTTTCCCCGGTATCACCAATACTGCCACCAAACACAGCAGGCGGGAAGGGGCGAAAGTCCCTTATCCGACAATAAAACTTCGCTTGTTCGACGCCCGGTTCACCCGATATGCACGGCGCCCAGCCATTCGTGACCGACGTCCCCAGCCCCAAGGCCGAACGACCCTAGGAGCCACGAGCAATTCACAGCG",
#  "CTCGCTGGTCATAATGCATCCTTGCGATTGGGGTGTAACCTCCACAGACAAATCCGACCACCGCGCCGGAGCCCTCCGATAGGGCCTGAAGTCCCGGCCACTGGGGTCATTCGTCCGCCAGGGGCGAAAGGTCTGCCACATTGGGGACTTCCGGCCCTAACTGAGCCGGCGCCATCGAAGCCAGGGTTAGCGCATGGCTGTCCGGGCGGGGCGCGGAGTTCGCCGGAGTCCGAGACCCCGGATCGTGTCG",
#  "GCGCCCCGCCCGGACAGCCATGCGCTAACCCTGGCTTCGATGGCGCCGGCTCAGTTAGGGCCGGAAGTCCCCAATGTGGCAGACCTTTCGCCCCTGGCGGACGAATGACCCCAGTGGCCGGGACTTCAGGCCCTATCGGAGGGCTCCGGCGCGGTGGTCGGATTTGTCTGTGGAGGTTACACCCCAATCGCAAGGATGCATTATGACCAGCGAGCTGAGCCTGGTCGCCACTGGAAAGGGGAGCAACATC",
#  "GTACATGTCCAGAGCGAGCCTCAGCTTCTGCGCAGCGACGGAAACTGCCACACTCAAAGCCTACTGGGCGCACGTGTGGCAACGAGTCGATCCACACGAAATGCCGCCGTTGGGCCGCGGACTAGCCGAATTTTCCGGGTGGTGACACAGCCCACATTTGGCATGGGACTTTCGGCCCTGTCCGCGTCCGTGTCGGCCAGACAAGCTTTGGGCATTGGCCACAATCGGGCCACAATCGAAAGCCGAGCAG",
#  "ACGGGACTGGCGACCGAGGTCAGCGATCCCGAGCAGGTTGCCCGCTACCAGCGGCTGCTACACCCGTGGGTGAACATGGCGATGGACACCGTGGTCGCGATCGAACCCGAGATCGTCACCGGCATCCGCATCGTTGCTGACTCGCGTACGCCGTAGCCGATTGGCCGCGGGCGGCCCGCACGCATCCGCACTATCTGATAAATTCTTCAACTCGTCAACCGATGTAACGCTGAAGCTCTCAGGAGACGCG",
#  "GCATCCGCGTCCGGGCAACCAGGGACGTTTCGGCCACGTCGCAAGCGACAGCCCAGGGTGCCGGATGCCCAGCCGCTCGCGGTGGCGGGCCGTCCAGAGCCGTCGGCAGCCAGTGACCAGCTGGGGTATCCGCATGGGGTCGCCCAGCGGGTCCCGAGGGGACTTTTGGCCACCGGCGCTGGTGGCCTACTGCCCTCCCGCCGTTGCGCCGGGTGCGTGCACGATTGAAGTCCCCAAGGAAGGGACGCTC",
#  "ACGATAGATCAACCGGACCACCGAGGGTTGATTATTGAGGTGCGCTCATCCGATGGTTCGCCGCCGTATGTGGTGCGCTGGCTCGAGACCGACCATGTGGCGACGGTGATTCCGGGTCCGGATGCGGTCGTGGTCACTGCGGAGGAGCAGAATGCGGCCGACGAGCGGGCGCAGCATCGGTTCGGCGCGGTTCAGTCGGCGATCCTCCATGCCAGGGGAACGTAGGCGATTCGCTCAAGCGACGAAGTCG",
#  "CGATCACCTCAATCCGATGACCTATGAAGCGCGCGGGCCCGGCCGCCATCGGCCCGTCGATCCGAGTGCGCACGGCCGAAGTGAGCCACCACCGTAGCGCCGCCGAGTTCGCTTCCGCGGACGCAAGCCCGGGATTTGCGGAGTAGCGTACAAGGCGGGATGCGCAATCCGGTCGCTGAGGGACTGTCGTCAGTCGGCCCAGGGACCTAATTCCATATTTGGAGCCATGAGATGGCGACACACTCGGCAG",
#  "GCAAACCGTGAGGCTAGGGAAGCGAGGAGCACATGGCCGCCGACCCGCAATGTACACGCTGCAAGCAAACCATCGAACCCGGATGGCTATACATCACCGCCCATCGCCGCGGTCAAGCCGGGATCGTCGATGACGGCGCAGTACTGATTCACGTGCCCGGTGAATGCCCGCACCCCGGGGAGCACGTTCCGCGAAGCTAGCCGGTTGGCATGCTAGGCAACGCAGCGTCAAGTGAGAGGGCAAAACCAAA",
#  "CCGCTGGCGACGCTGTTCGCCGGCAGCGTGCGTGACGACTTCGAGCTGCCCGACTACACCTGGTGACCACCGCCGACGGGCACCTCTCCGCCAGGTAGGCACGGTTTGTCGCCGGCAATGTGACCTTTGGGCGCGGTCTTGAGGACCTTCGGCCCCACCCACGAGGCCGCCGCCGGCCGATCGTATGACGTGCAATGTACGCCATAGGGTGCGTGTTACGGCGATTACCTGAAGGCGGCGGTGGTCCGGA",
#  "TCAGCACCATGACCGCCTGGCCACCAATCGCCCGTAACAAGCGGGACGTCCGCGACGACGCGTGCGCTAGCGCCGTGGCGGTGACAACGACCAGATATGGTCCGAGCACGCGGGCGAACCTCGTGTTCTGGCCTCGGCCAGTTGTGTAGAGCTCATCGCTGTCATCGAGCGATATCCGACCACTGATCCAAGTCGGGGGCTCTGGGGACCGAAGTCCCCGGGCTCGGAGCTATCGGACCTCACGATCACC",
#  "ATGGCGATCCGCTCGATACTCCGCTGGCAGCCCGAGCGGGGGGTGTCCCCTACCCTGGCTGCCCCGGCTGACGGTATTCACCGGTATCCCATGATGCACTCAATCCCGATGCCTGCACCTTCTGTAAGCTCGCGACGGCTAACGGGGTTATCGGATGGCCCGGGCTCGAAGGAGGTTGGCACGTGTGGATGTTCCTGCCCGGTCGCCACGCGGCGGCGGCGATACCCCAGAGTCGTCAGGTGTTTAGCCG",
#  "GGGTCAGGTATATTTATCGCACACTTGGGCACATGACACACAAGCGCCAGAATCCCGGACCGAACCGAGCACCGTGGGTGGGCAGCCTCCATACAGCGATGACCTGATCGATCATCGGCCAGGGCGCCGGGCTTCCAACCGTGGCCGTCTCAGTACCCAGCCTCATTGACCCTTCGACGCATCCACTGCGCGTAAGTCGGCTCAACCCTTTCAAACCGCTGGATTACCGACCGCAGAAAGGGGGCAGGAC",
#  "TGTCCGCTGTCGAGTTTCGCGACATGGCCGAGACCTTTGAAGACGAGGAGCACCGGCGCTTTGGCGAGGCCGGTTTTCAATCGGTGGTCGACAAGGTCGCCGATATCGAAAAAAGCCTTGGCATCTACGACCTGAGCCAGTTCACCCCCAGCTAAAGACACTAATGCCCTTGGGTTAGGGACCATCGCCTCCTGACGCGATCGCGACAGCTGGCTAACGTCGGTAGTACACCCATGCAGAGGGGACGCCA",
#  "TCCGGTTATCGTCGCCCGAATCCCCCAAGATCCGGCAGTGCCGGCCTGAGGGCCTGTGCGATCTGCTCGGGTGGTGCCCACCCGCGCGGAAAGCCCCGTCCGAACCGTGATTGGGCAACGTCGGGCCGGGCCAGCAGCGCTGGACCGTAGGTCCCTGCAGTGGATGACTTACGGCCCTGATCCACACCGGCGACCGTTAGGCAGGGTTGAGCCAACCGTCGGTTGAGCGTCTGGCTGCGAGGTGAGGTGA",
#  "TTCGGCGACGGTTGACGTGATGGCCGACAGAATCGTTGCTAGAGCCGGGGGCAACTCCGACGCCACCGCCGAGATCGCGGCGGCCTTGGCCGCCCGGCAAGCGGACTGGGACACCGGGCACCGGATCGACACGGCGGGGCCGCGTGAGCGCTCCGTGGGACAGGCCTACCACATCTGGCGCAGCGCGATCTGAGAACGCCGAAAGGAAAACCGATGCCAACCATCACTGTCAGCAGCACATCGTCGCTGT",
#  "CGTCCATGCCGCGGCGTGCACTCGCGTGGCCTTGTCGACCACGTTGTCGAGGCCGACGATGACAGCGTCGTGGTAGCGCCGGTCGATGGTGGGCGGCGGTCCGGTCACATTGACGACGATGCCACAGCGCACGCTTGGATTCGGGCGTCGAATCCAATCATGGTCGGTTGGCCGTCCGATTGGGGACTAAAGCCTCATGACCGGTGACTGTCCCGGTTCATAGCGTTGCTCGAGGCGAAGGGAGAATGAG",
#  "CACCACGTGGACCACGGTCAGCGGAATGTTCCTCATCGCCGCATCGGTGGCACCCCAACAGGCGGCGGCATCCGATTCGAGCGAACCATCTACCCCGACGACAACTCCGTGCTGCTTGCGGGGTTTAGACATCTCATTCTCCCTTCGCCTCGAGCAACGCTATGAACCGGGACAGTCACCGGTCATGAGGCTTTAGTCCCCAATCGGACGGCCAACCGACCATGATTGGATTCGACGCCCGAATCCAAGC",
#  "TTCCCGCGGATCAGATCTTGACCACCGGGAGTGTCGATGAACTTCTCGCGCTCTTGAAATGACGGGCTATCGTAAGTTTATGGCCTGGGGGAGCGTGAATCCCGCTGGCGGTCGGGTGAACCGCCCCGGTTTTCTTGCACCCCGCGTCGACGTGCCAGTGACGAACTTGACGAATAAGGCCTTTGGTCCTTTCCGGTAGGGGTCTTTGGATAGGCGCGATCCTCGGCATCGGGCCGGTAGCTTGCCGTTT",
#  "GGCCAACTGCACCGCGCTCTTGATGACATCGGTGGTCACCATGGTGTCCGGCATGATCAACCTCCGCTGTTCGATATCACCCCGATCTTTCTGAACGGCGGTTGGCAGACAACAGGGTCAATGGTCCCCAAGTGGATCACCGACGGGCGCGGACAAATGGCCCGCGCTTCGGGGACTTCTGTCCCTAGCCCTGGCCACGATGGGCTGGTCGGATCAAAGGCATCCGTTTCCATCGATTAGGAGGCATCAA",
#  "AAACTCGGGGAAGAGGGACCGCGGGTGGCGCTGAACGGGAAGGGTGGTGGCCATTTGATGCCTCCTAATCGATGGAAACGGATGCCTTTGATCCGACCAGCCCATCGTGGCCAGGGCTAGGGACAGAAGTCCCCGAAGCGCGGGCCATTTGTCCGCGCCCGTCGGTGATCCACTTGGGGACCATTGACCCTGTTGTCTGCCAACCGCCGTTCAGAAAGATCGGGGTGATATCGAACAGCGGAGGTTGATC",
#  "CATCCATCGTGCCGCGCGTCGGCGAGTCCTGTTGATGCGCCACACATTCCGCAGGCATCGTGAACGCTTGACAGCCGTCGCCATTGTCGCGCACAAACCGCACGTCGATTCGTGATCCATTGAGGACCTAAGCCCGTTGGGCTAGTGACAAACGCCTCCTGAGCAAAACCCTCCTCCCCCGTTACCGTCGTGCGGTAGGGACAAGCCACATCGGCCGAGCGGGCGATCAGCCAACGACAGGAGGACCGCG",
#  "GTCGATGCGAACGCAAGCATCCAGGAGATGCTCAACGTCATGGAAGAACATCAGGTCCGCCGTGTTCCGGTCATCTCAGAGCACCGCTTGGTCGGAATCGTCACCGAAGCCGACATCGCCCGACACCTGCCCGAGCACGCCATTGTGCAGTTCGTCAAGGCAATCTGCTCGCCCATGGCCCTCGCCAGCTAGCGACCTCGGATCATCCGCCGGCACGAAAGGCTTTATCCGCCAGCATCGGAGGTACCCA",
#  "CCGATCGGCATCACTATCGGTCCTGCGGCCGCCCATAGCGCTATATCCGGCTGGTGAAATCAATTGACAACCTTCGACTTTGAGGTGGCCTACGGCGAGGACAAGCCAGGCAAGCCAGCTGCCTCAACGCGCGCCAGTACGGGTCCATCGACCCGCGGCCCACGGGTCAAACGACCCTAGTGTTCGCTACGACGTGGTCGTACCTTCGGCAGCAGATCAGCAATAGCACCCCGACTCGAGGAGGATCCCG",
#  "ACCGTCGATGTGCCCGGTCGCGCCGCGTCCACCTCGGTCATCGACCCCACGATGAGGACGCCATCGGCCGCGACCAAGCCCCGTGAAACTCTGACGGCGTGCTGGCCGGGCTGCGGCACCTGATCACCTTAGGGCACTTGGGCCACCACAACGGGCCGCCGGTCTCGACAGTGGCCACCACCACACAGGTGACTTCCGGCGGGACGTAAGTCCCTAACGCGTCGTTCCGCACGCGGTTAGCTTTGCTGCC",
#  "CACCTGTGTGGTGGTGGCCACTGTCGAGACCGGCGGCCCGTTGTGGTGGCCCAAGTGCCCTAAGGTGATCAGGTGCCGCAGCCCGGCCAGCACGCCGTCAGAGTTTCACGGGGCTTGGTCGCGGCCGATGGCGTCCTCATCGTGGGGTCGATGACCGAGGTGGACGCGGCGCGACCGGGCACATCGACGGTCCCCGGGGCTTTGTGGGCCAGTGAAGTGACGAAAGACCCCAGTGGACACGGACTTCGGC",
#  "GTGCCACGACGCATAGAAGACATGGCCATGCCACACCCTGATAGCATTGCAGCAAGCTACATGTACTGCTCTACCAGGATCCTTATGGGCAACAGTGGGTTTGAGTTATGAAACCCGTGGGCACATACCCTTCCGCGTCGTACTGGTCAGTCTCGACAGCGAAGAGATCACCGGTTGATCCACCAAGCATGCATTGGCGGGCATCTGCATAAACGGTGACGTATCAGCACAAAACAGCGGAGAGAACAAC",
#  "GCGAGTACGCTAGTTCAGGTGGGTGCCGTGCCGAAGGCGGTGTCACTCAACGAACTTCGGTTCTCGCAGGGTCGCCACGGCTGGCGATGTGCGGTAACGCTCGATGTGTGAATTGAGACCTGATTCATGAAAATCGTCGAGGAGACCCCATACCGGTTCCGGATCGAACAAGAGGGCGCGATGCGGGTGCCCGGGATCGTGTTCGCGTCCAGGTCGTTGCTGCCTCGTGACGAAGGCGACATGGCCCTTG",
#  "CTTGAGGTCCAGTCCGGCGCAGAACACCGGATCGGCGCCGGTGAGGATGACGACGTCGATGTCGTCGTCGGCCTCGGCGTCGGCCAACGCCGCGAAAAACCGATCCCGTAGCGCCGCCGAGAGCGCGTTGCGGGACTGCGGCCGGTTGAGGGTGAGGGTTCGCACCCGTTCGTCGGTGTCGATCAGCAGGATGTCGTCGGTCATTCGATCACCGTAACAGGACCGTTAGACTGTCCTAATGACCAGAAAA",
#  "CGCGCGAGATCTCATCGACAACCCACTTCCCATGCCTCACGACGGTCACCATGTCGCGGGCATATTTACGTGAGGCACCGAGGGTGTTTCGCGGGCATTCTTGGTGAGTCAAGTCGAACGGTTGAGCCATGATCGACGATTCCGTTACCGTGCTGTCAGAAGACGAAAGTTGGCACCGGCTGGGCAGCGTTGCACTCGGTCGGCTAGTTACCACCTTTGCTGATGAGCCTGGGATCTTCCAGTCAATTTC",
#  "GGGGGCCCGGACGGCCAGGGTGAGAACCGTTCGCACGGTTTCGGCGTCCGGGAAATGGGTGTTCATGGCTGCCGGGCCTTTCCCATCAACGGCTGCGGTCATCTATTAAGGATCGCGCGTCGACAGCCGCGGTGGCAGAGCACGAAGGCTCGCCAGCGGAGGACCTTTGGCCCTGCCTCAACGGCTCCTCGCAGCGGAGAGTGGTACTGACGGTTGCAGATAATCCGGATCACCGGGGAAGGCGCTGACC",
#  "ACTCACGTGCCGATCCACGTCTTCTGCCTTGAGAAACCCGGCGTCAAGTGTCGTTAGGTGATTCATGGTCAGCGCCTTCCCCGGTGATCCGGATTATCTGCAACCGTCAGTACCACTCTCCGCTGCGAGGAGCCGTTGAGGCAGGGCCAAAGGTCCTCCGCTGGCGAGCCTTCGTGCTCTGCCACCGCGGCTGTCGACGCGCGATCCTTAATAGATGACCGCAGCCGTTGATGGGAAAGGCCCGGCAGCC",
#  "GTTGGCGCATGTACACCTGAGCCGTCGGCTCGCCCACTGGACCCGGCTCTACCCCGAGGTGCGGGTGGATCGGGCCATCGCCGGCGGCAGTGCGTGCCGTCATCTGGCCGCCAACGCAAAGCCGGGTCAGCTGTTCGTCGCGGACTCACACTCCGCGCACGAATTGTGCGGTGCATACCAGCCCGGATGCGCCGTACTTACGGTACGCAGTGCCAACTTGTAGGGAGCGGATCTTGGGAGTGGTGCCCTG",
#  "GGCAGCTGTCGGCAACTGTAAGCCATTTCTGGGACTTTGCTGTGAAAAGCTGGGCGATGGTTGTGGACCTGGACGAGCCACCCGTGCGATAGGTGAGATTCATTCTCGCCCTGACGGGTTGCGTCTGTCATCGGTCGATAAGGACTAACGGCCCTCAGGTGGGGACCAACGCCCCTGGGAGATAGCGGTCCCCGCCAGTAACGTACCGCTGAACCGACGGGATGTATCCGCCCCAGCGAAGGAGACGGCG",
#  "GTTGTCGATGAGATCTCGCGCGGAGGTCACCAGCAGGTACGCCAAGGCGTATGTGCAGGCTTTGAAGAAGAGCCGGGGCCGGATTTTCGACCAGGTGGTTGACCTGACGGGCTAGTCACGTGATAACGCGCGGCGCCGGCTTGTCGCAGCGGCCAAGCTATCGCCGGGGCTGGGCCGCAGTGTTGCCAAGCGGCGGCGCAAACCGCGTTCGCTGAAGTACTCCTATGACGCGCTGAAGGTGTTGCAGAGG",
#  "TAGAGGGCTCCGACGTGCCGGTGCCAGCCGCCGCGTTCGAAACACAGCCCTAACGACACGCTGCCGAATATGACCCGTGTCGGAAATTAGGGCGACAAGAGTAATGCGGCTCAACATAGCCTTGCTTTACTTAGGCAAACCTGCCTTCAACCAGGAGGTTATTATCATCCTGTGGTAACTAGGAAAGCCTTTCCTGAGTAAGTATTGCCTTCGTTGCATACCGCCCTTTACCTGCGTTAATCTGCATTTT"]
# dna = ["CAAGGTCGTGGGACCGCCCTGATTGGTCAACCACAGATGTTGTCCGCACACTTGGGCGGTAAGGATGCATCACGCCGCAATGGACGCTGGAGGGACAGTGGAAGCAACCATTGTAATCTGTTTAGGTCACCTGCTAGACCCTGTGATGGTCACGTCGCGAAGCGACCCACCCATGAGTCATTGGGTCGAGATGGCTACGGCCTGGAGTATTTATGATCCCGTTGCGGGACATGTATGGAACGGCGAGAATAAGGCTGGCTACCTCGTTTAAGACTTACGACGTGTAACCAGATGTCCCTCGGGGACAAGGTCGTGGGACC", "GCCCTGATTGGTCAACCACAGATGTTGTCCGCACACTTGGGCGGTAAGGATGCATCACGCCGCAATGGACGCTGGAGGGACAGTGGAAGCAACCATTGTAATCTGTTTAGGTCACCTGCTAGACCCTGTGATGGTCACGTCGCGAAGCGACCCACCCATGAGTCATTGGGTCGAGATGGCTACGGCCTGGGCCCTAGGAGGCAAGAGTATTTATGATCCCGTTGCGGGACATGTATGGAACGGCGAGAATAAGGCTGGCTACCTCGTTTAAGACTTACGACGTGTAACCAGATGTCCCTCGGGGACAAGGTCGTGGGACC", "AGTAGAGTCTAACCTGGGGCACAACCCTACGCTACAGAGTCCCGCGTAAGTGCGCGACCGGACTAAAGGCGTACAAAGCGTTTCTCATAAGGTGAAACGGAGTTGCTCCGAAATAAGTACGCGGGCTGAGGCGATTGGCAAGAGGGGTAGCGGTATAATGTTGTGGCCTTTCCACCGACTCGCGACCTCGGTTGGCGCTTCGGATTAGGCCCGCTTATGCAGCGACGGTTTTCTATTTCTTTCTACGAAAGACTGGCGGGAGGAGGCAAAAGGTATGCGGACGTGAGCGCCGCTTCTTTCTTCTGGTTATAAAGATCTAC", "GCCCACGGTTGACGCCTGTATCGTGAGCTAACGGCGACAAAAGGGTCATATCGCGAACTAAACCGCCAAAATATACAGTGTAAGGTTCCAGCCTTGTCGCCTAAGGCATGGGCCGAAAGCCCAGCTGGGACGATGATTCCCACGCATCTGCCATCGACTGCCGTGTAGCCGAGAGTTCGCGCTCGAAGCACTAACTCCTAAAGGTTCATCACTCAGATTTGGGGAGCAGATAATGTGGCTTAAAGCAGGCTTAAGGACCGAACATGGGCTGGTTGGAACCGAACAGGTGTAATTGTAGGATCTATAGTGCCTATCCAGGT", "AGCATTAATCAGTTGCTCGTTACGTTACTCTGCGCATGACGCAACACGTGGTTGGGCACCCTCATCATTCCCTAGTCTAAACTAAAGCTACGGCGCTGTGAGCGCAGGTGAAGCGGAATGCGGCGAATATGCTAGTTCCCTGTCATCGTCAGTAGCCATCTATCCAGTTAATCCCCTGCGTCTCACTCGAACATTATTTCGAGCTGTGGTCTCGACACATAGTGCGACACAACCAATCGGTTTCGAAATCTGGAGGTAAGGAGGCAAGGTCGATAGTTGCGGAAGGGCCAGAGACGTACTACTACCTGGCCCGCAATGCC", "GATACATCGCATAATGATATGTTGCCCACCCGTGCCAGTCGCCCCGAATCCCGTAACTACAGGCCGACGCATCGATGCTAGGTTTAAGTTGTTCCCTTTTTCGACTGTGATGTAGAATCTAGGTCTGCGTACTGTAATGATCTTCTCGTTTCTGTACATGTATCAACACCGATGTCGTCAGGGATCACTAAGGGTGAGTATGCCCTGCCTCGGTCGCACTTAGGCTTAAGGAGGGGGAGTTTGGGCCCAAATTAGGAATCCATTCATACCTCCCCATGTGCCCCATATCGATTTGTATATTACGTTTTTTGGCGCCCGGC", "AAATATTTAGCAATATTCCCCATTTGCCTAGCAAAAAAGTTAGGGCACGGCCTTGAATTACCTACGCATAGCTATACCTGAAATGGAAACCCTCGCTTACCCTTAAGGAGGCATGATCTAGGTGTCTACGCGCAACACGGTCACTATCATTATCGATCGCAGTGTGCTAATAAGCCGGAACAACTGGCCTCGTGCTCGGTACGGAAGGTGATCCGGTCTTACATCTCCGCTAAAGAGTTCCGCGGGTACTCTTAGTAGATCGATATGAGTGTTGCGATCCTGGGTTGTCATAACATTCCTGAGCTTGGTTTCTTGGTAGT", "ATCCCCCATCGACGGGCTTAAGGAGCATACTTACACTATTTAACGTGCATAATGAGGGTTACTGTATTGACCGGGTCAAATCGCAGTCCACACTTACAGCAGATAACCCCAGATGTACCTATCCACAGAACGGGGATGGCAGTGCCGGATTGAAGGAGATATAATAGCCGGGGGATCGCTCGACGAATACTCCCCGGAAAAAAGCGGCTGTCTACGATGGAGCATTGACGTGGGGCTAAACACAGAAAGACTAGTGGTGTGATGAGACCCCTCTAGAATCTTTGTTTGGATCTCTGCCCCGCACCGCGGAGCCTGGTCGT", "AGCTACAATTTCTGTTTGGGGAGGTTTCAACACCGAGACATGGACTTCGGGTTCCCGATCGCTTCCTTGTAACGCCTGCGAGTCCCTAGGATTGGAGCCCGCTTTGCCGCCATTAATCTACAGGGGGAATGTAGTTTTACTTACCTCAACTCACCCTGGGTAGGAAGTCAGGGGCCTCCATGTCGGGGTAGTCCGGTTTATGGGTTGCGCACTCCTGCATTGTCGTTTCATTAAGGAGGCAACGAGTAATTCGTCCTCAGCGTGTATTATAGGTAAATAATACATTGTAGTCAACTGACATCTGGATGATTCGAACTCGT", "CACAACTATAATCCGTCCTCTTGGTCAACATAGGTGGACCGAGGATGATGCTAGGTGTTGATCATCCAGACTCACTACCTACCGTAACGCGTCCGCTGTGACAGATGTGGCTTATCCAGGCAATGCGCCACATGCCAAGGCGATGCGTCGACCCATACGATTGGTAGCAGTTTTACAGGTTACTGGAGTTACCTCTGACGCGTTGAACGTTAAGGCTCTCAGAACGCCAAAAAGCCCAGTATGGCAAGCTTGCATGTCGCTTCGACAAGGCTACAATTCTTCAGACCGACACGCACCTTTGGGTCGTGGAAGCGCAGCAA", "CTGTGCGGAATTTTGGAACTTCTATTCGCGCGGCTAAGATAGCGTAGCGAGTTGACTCCTGAGGATTGTTAGGAGCAAATTATGCAGGGCTCGATAGACTGATGAGTGATTAGTGTCGGTTTCGCAATATTTCTAAAAAAAGACTTTAAACAGGCTCGGTGTAGCTTTCCCTTGATGATGCGCTTAAAATTGTGGCCCAGTTTTACGACATACTCGTTACGGACACGTCCATAATCAGGCCCGATAAGGGGTGCTACTAAACCTGTATTTTTAATGGCTTAACTTGGCAAGAAAGGCCAGTACCTCCTTAAGAGGTTTGT", "CGAGATCCACGTCGGCGGTCATCGAGAGGCGGTCCCGCCCGAGGTCCACTCCGTCTACGGCCCCACTTCTAGCGGTCACAGGCATAGGCGCTGGTCCCACGGCAAAAGGCTTCAACAGAGAGAGGCTACGGGAGGCAAAGGAGGGACTATAGCGGTCACCCTAGCAACGGTCAAACCTTTGTGCTCCTAAAAAGCGCTACTTTCGCCAATTGATTTCGCCCGCTTTGAGGGCGTAGGGAGGTGTAGCCAGCAAGGGCAGTTTTACCATTGACCCGTCGAATCCTAGTTCGCTTAAGCCTAAGCACCCCTAAAAGCATAGG", "GTACCAGTATATGGCTTAAGTCTGCAAACGCTTCGCTGAGAAGTGATGGTACTGTAGAGAGGGGTCTCTATATACTAACGCGCCGCAACATGCAAGGACCTTTTAGGTCCTGTGATGTTCGACCGCACTCAAGTCTATCCGATGTGCTTCTATGAACTCCTCAGGTCATTTACTGCTATGGGATCCCAAACCCGCAGAGTTGCGTCAGATAGATCTCCGGCATGGTTTTGCGAAGTCTATGCCCAGAGACGTATAGGCATGAGTTCCAAAGGATGTATCGAGCTCGAGATGCTTGGGTGCTACCCTGTCTGCAGTTCGGA", "GGCTTATATAGGCAAACTCGCCCGTTTATTCTTATTGCCTCCATCAGCAGGGACTCGTGTGAACATTAGACTCAATGGAAGTCTCACTGGCGACGCATAAACGCGGCGCTGGGCCGTATGACATTCTGATCAGTGGTGCCAATTTCGACCGGGTGATTAGGCGACGGGACCGAAGTCAGTGGTACAAAGCGCCGCCGATTCTGAAAGACAATGGTCCCTGGTTTTAACGAATGCGAATCTGCTGATACCAACCGAACGGTAGGCGTTTCGTTCGGTGATTTGCAAGGGTGTTCATCTTGACCACGGGCATCCGCAAGCTC", "TCCCTTCCGCTGTACCAAATTTGTGCATCGGCCCCAAGCCCAGCTAAAGTTGAGTTGTGCGCGATATGCTTAAGGAGGCCGCTATCCCTGTTGGTGCGAAACGGCCGTCCCAGAAACAATTCTGGGAGAAAATATAAACCCTAAGGTTCGGCGGACGATTGCATTCAACCTCGCTATCACCCGAATTTAGTCACCCACCTTAGAGGCTTCAAACTCTAATCCCCCCCGTCCTGTCCTTGGCGACTGACTCTCTGGGAGATGGTAAAGCTGTAACCGCACTACGCGGTACTCTGGGTGAGATAGGTGGTCCGCACTATCAG", "TCCAGGGATTACAGTGTGCGGGTTCGCTTGTGATGGTTGACTAGCACACCGAGGTAGCCTACGGCGGAGTGCAATGGCGTCCGGCGAGGGAGGCTTCTCGAGGCAACCACAGCCTGATATCTGCACCGGGCTACGGGGGCGACCCCGTGGAAATTATTGGTTGAGTCTCTTTTCCCCACTATCAGAGGGGTCGCTCAATATGCTTTCATATTGAGGGTCATACAGCCCAATGGCCCGGATTACCAATTGCAAGCAGACACAGGAATGTGTCAAACCGCTCGCGCCAGTACAGTCTTGGGGCACCGAAGTCCTTTAATGGA", "GTAAAGTGGTACTTTGGTCGCATACCTATATCGACCAGCGTGGCTACGACGTTTCGTCTTTTGCGGTGTGAACACGACCGGAGGGAACCGTACTCGGTATAGTGCGTGCACCGATTGTCTCGTCGAGAATGGCCTTTGGTAGGGTGCGGGGAATACGGTGAAAGGAGGCAACGAACTCTAATGGAGCGTTGGAATGACGCGTAGATGCGAACCAAGACTGGTGAGGACTAGTTTTGCACTTCCAGTAGTGATCATGGGGGGCGCCATGAGTAAGTTACTCGGACTAATATGGGTCAACACCTTCATTCAGTGAAAATATC", "CAATTAGGGTAATGGCTCGTATATTTTCGCCGACATGATCCCGCCGGAAAAGTTGGCCGTGCGAGTGCAACCAATTTTTCCCGAGGCTTAAGGTCCCAATAGTCCGAAGAAAAGACACGAGAGCACGATACAACGCTGACAGGATACTGCACCGGGGGGTACTCTCAATGGACGTCGAGCCAGTTAACCAGTTCACCTGAACGCATTGGGGCCTCACTTTGATGCAATCCTCGATCAGGCATGCCAGTAGGTTTACCTACGGGAAGAGGCTGCACGTAGCAGGGGTGTAGAGTATTAATTATGACTGAGAGGAACGGCCG", "CGCCAAATTCGCGCGCTATCTAGTCTCAGAAACTTACAGCATTGTCTGGCATTGCCTAAGATGTATGTAGCCGACAGAGCGCGTCTTTTTTCACGGACGTAAAGTCCGAGGACAATCCAAAGAGCGAGATGTCGCAGCCTTGGTTTAATGCTCAGTCAACGGAGGACCTACTGACCCTTCCGACGGGGGGGTTAACTAAGGGGTTCGGATGGGGGGTGGTGGCGTATGGATGGGGTGGTCTGTGCCCAAAGGCGGACAGTCTCCAGTCAACATTCGGGGGCTTCGCGAGGCAAGTTGATGACCCGAGGTGCAGTGACGTC", "CATAACGACACTGTTGAGCCTAGCTTATGACGGCAGCGAGTGGGTTCACAGGATAGTTTGCAGTCTATGGTATGAGACTACAGATACCAATCTTCCCCGTCGTACGGGTTGGCTACTGGAGGCAACGAGGACTAGAGATAAGTGTAGGTTGGAGCGGGGCAGCTGGCAGGGTAAATGGAAGAGCACGTCTAACCCCCTACCGCCCTAATAGTAATCGGCCGGTCATGAAATTCTTCTAACATTGATTATTACTATTAACTAACAATTGGTTACCCCCATCAAGACGCGGTATAGCATTCATAGTGACTCCGGGAGTTCGG"]
# k = 20
# dna = ["GTAGGTCAAACCGGGTGTACATACCCGCTCAATCGCCCAGCACTTCGGGCAGATCACCGGGTTTCCCCGGTATCACCAATACTGCCACCAAACACAGCAGGCGGGAAGGGGCGAAAGTCCCTTATCCGACAATAAAACTTCGCTTGTTCGACGCCCGGTTCACCCGATATGCACGGCGCCCAGCCATTCGTGACCGACGTCCCCAGCCCCAAGGCCGAACGACCCTAGGAGCCACGAGCAATTCACAGCG", "CTCGCTGGTCATAATGCATCCTTGCGATTGGGGTGTAACCTCCACAGACAAATCCGACCACCGCGCCGGAGCCCTCCGATAGGGCCTGAAGTCCCGGCCACTGGGGTCATTCGTCCGCCAGGGGCGAAAGGTCTGCCACATTGGGGACTTCCGGCCCTAACTGAGCCGGCGCCATCGAAGCCAGGGTTAGCGCATGGCTGTCCGGGCGGGGCGCGGAGTTCGCCGGAGTCCGAGACCCCGGATCGTGTCG", "GCGCCCCGCCCGGACAGCCATGCGCTAACCCTGGCTTCGATGGCGCCGGCTCAGTTAGGGCCGGAAGTCCCCAATGTGGCAGACCTTTCGCCCCTGGCGGACGAATGACCCCAGTGGCCGGGACTTCAGGCCCTATCGGAGGGCTCCGGCGCGGTGGTCGGATTTGTCTGTGGAGGTTACACCCCAATCGCAAGGATGCATTATGACCAGCGAGCTGAGCCTGGTCGCCACTGGAAAGGGGAGCAACATC", "GTACATGTCCAGAGCGAGCCTCAGCTTCTGCGCAGCGACGGAAACTGCCACACTCAAAGCCTACTGGGCGCACGTGTGGCAACGAGTCGATCCACACGAAATGCCGCCGTTGGGCCGCGGACTAGCCGAATTTTCCGGGTGGTGACACAGCCCACATTTGGCATGGGACTTTCGGCCCTGTCCGCGTCCGTGTCGGCCAGACAAGCTTTGGGCATTGGCCACAATCGGGCCACAATCGAAAGCCGAGCAG", "ACGGGACTGGCGACCGAGGTCAGCGATCCCGAGCAGGTTGCCCGCTACCAGCGGCTGCTACACCCGTGGGTGAACATGGCGATGGACACCGTGGTCGCGATCGAACCCGAGATCGTCACCGGCATCCGCATCGTTGCTGACTCGCGTACGCCGTAGCCGATTGGCCGCGGGCGGCCCGCACGCATCCGCACTATCTGATAAATTCTTCAACTCGTCAACCGATGTAACGCTGAAGCTCTCAGGAGACGCG", "GCATCCGCGTCCGGGCAACCAGGGACGTTTCGGCCACGTCGCAAGCGACAGCCCAGGGTGCCGGATGCCCAGCCGCTCGCGGTGGCGGGCCGTCCAGAGCCGTCGGCAGCCAGTGACCAGCTGGGGTATCCGCATGGGGTCGCCCAGCGGGTCCCGAGGGGACTTTTGGCCACCGGCGCTGGTGGCCTACTGCCCTCCCGCCGTTGCGCCGGGTGCGTGCACGATTGAAGTCCCCAAGGAAGGGACGCTC", "ACGATAGATCAACCGGACCACCGAGGGTTGATTATTGAGGTGCGCTCATCCGATGGTTCGCCGCCGTATGTGGTGCGCTGGCTCGAGACCGACCATGTGGCGACGGTGATTCCGGGTCCGGATGCGGTCGTGGTCACTGCGGAGGAGCAGAATGCGGCCGACGAGCGGGCGCAGCATCGGTTCGGCGCGGTTCAGTCGGCGATCCTCCATGCCAGGGGAACGTAGGCGATTCGCTCAAGCGACGAAGTCG", "CGATCACCTCAATCCGATGACCTATGAAGCGCGCGGGCCCGGCCGCCATCGGCCCGTCGATCCGAGTGCGCACGGCCGAAGTGAGCCACCACCGTAGCGCCGCCGAGTTCGCTTCCGCGGACGCAAGCCCGGGATTTGCGGAGTAGCGTACAAGGCGGGATGCGCAATCCGGTCGCTGAGGGACTGTCGTCAGTCGGCCCAGGGACCTAATTCCATATTTGGAGCCATGAGATGGCGACACACTCGGCAG", "GCAAACCGTGAGGCTAGGGAAGCGAGGAGCACATGGCCGCCGACCCGCAATGTACACGCTGCAAGCAAACCATCGAACCCGGATGGCTATACATCACCGCCCATCGCCGCGGTCAAGCCGGGATCGTCGATGACGGCGCAGTACTGATTCACGTGCCCGGTGAATGCCCGCACCCCGGGGAGCACGTTCCGCGAAGCTAGCCGGTTGGCATGCTAGGCAACGCAGCGTCAAGTGAGAGGGCAAAACCAAA", "CCGCTGGCGACGCTGTTCGCCGGCAGCGTGCGTGACGACTTCGAGCTGCCCGACTACACCTGGTGACCACCGCCGACGGGCACCTCTCCGCCAGGTAGGCACGGTTTGTCGCCGGCAATGTGACCTTTGGGCGCGGTCTTGAGGACCTTCGGCCCCACCCACGAGGCCGCCGCCGGCCGATCGTATGACGTGCAATGTACGCCATAGGGTGCGTGTTACGGCGATTACCTGAAGGCGGCGGTGGTCCGGA", "TCAGCACCATGACCGCCTGGCCACCAATCGCCCGTAACAAGCGGGACGTCCGCGACGACGCGTGCGCTAGCGCCGTGGCGGTGACAACGACCAGATATGGTCCGAGCACGCGGGCGAACCTCGTGTTCTGGCCTCGGCCAGTTGTGTAGAGCTCATCGCTGTCATCGAGCGATATCCGACCACTGATCCAAGTCGGGGGCTCTGGGGACCGAAGTCCCCGGGCTCGGAGCTATCGGACCTCACGATCACC", "ATGGCGATCCGCTCGATACTCCGCTGGCAGCCCGAGCGGGGGGTGTCCCCTACCCTGGCTGCCCCGGCTGACGGTATTCACCGGTATCCCATGATGCACTCAATCCCGATGCCTGCACCTTCTGTAAGCTCGCGACGGCTAACGGGGTTATCGGATGGCCCGGGCTCGAAGGAGGTTGGCACGTGTGGATGTTCCTGCCCGGTCGCCACGCGGCGGCGGCGATACCCCAGAGTCGTCAGGTGTTTAGCCG", "GGGTCAGGTATATTTATCGCACACTTGGGCACATGACACACAAGCGCCAGAATCCCGGACCGAACCGAGCACCGTGGGTGGGCAGCCTCCATACAGCGATGACCTGATCGATCATCGGCCAGGGCGCCGGGCTTCCAACCGTGGCCGTCTCAGTACCCAGCCTCATTGACCCTTCGACGCATCCACTGCGCGTAAGTCGGCTCAACCCTTTCAAACCGCTGGATTACCGACCGCAGAAAGGGGGCAGGAC", "TGTCCGCTGTCGAGTTTCGCGACATGGCCGAGACCTTTGAAGACGAGGAGCACCGGCGCTTTGGCGAGGCCGGTTTTCAATCGGTGGTCGACAAGGTCGCCGATATCGAAAAAAGCCTTGGCATCTACGACCTGAGCCAGTTCACCCCCAGCTAAAGACACTAATGCCCTTGGGTTAGGGACCATCGCCTCCTGACGCGATCGCGACAGCTGGCTAACGTCGGTAGTACACCCATGCAGAGGGGACGCCA", "TCCGGTTATCGTCGCCCGAATCCCCCAAGATCCGGCAGTGCCGGCCTGAGGGCCTGTGCGATCTGCTCGGGTGGTGCCCACCCGCGCGGAAAGCCCCGTCCGAACCGTGATTGGGCAACGTCGGGCCGGGCCAGCAGCGCTGGACCGTAGGTCCCTGCAGTGGATGACTTACGGCCCTGATCCACACCGGCGACCGTTAGGCAGGGTTGAGCCAACCGTCGGTTGAGCGTCTGGCTGCGAGGTGAGGTGA", "TTCGGCGACGGTTGACGTGATGGCCGACAGAATCGTTGCTAGAGCCGGGGGCAACTCCGACGCCACCGCCGAGATCGCGGCGGCCTTGGCCGCCCGGCAAGCGGACTGGGACACCGGGCACCGGATCGACACGGCGGGGCCGCGTGAGCGCTCCGTGGGACAGGCCTACCACATCTGGCGCAGCGCGATCTGAGAACGCCGAAAGGAAAACCGATGCCAACCATCACTGTCAGCAGCACATCGTCGCTGT", "CGTCCATGCCGCGGCGTGCACTCGCGTGGCCTTGTCGACCACGTTGTCGAGGCCGACGATGACAGCGTCGTGGTAGCGCCGGTCGATGGTGGGCGGCGGTCCGGTCACATTGACGACGATGCCACAGCGCACGCTTGGATTCGGGCGTCGAATCCAATCATGGTCGGTTGGCCGTCCGATTGGGGACTAAAGCCTCATGACCGGTGACTGTCCCGGTTCATAGCGTTGCTCGAGGCGAAGGGAGAATGAG", "CACCACGTGGACCACGGTCAGCGGAATGTTCCTCATCGCCGCATCGGTGGCACCCCAACAGGCGGCGGCATCCGATTCGAGCGAACCATCTACCCCGACGACAACTCCGTGCTGCTTGCGGGGTTTAGACATCTCATTCTCCCTTCGCCTCGAGCAACGCTATGAACCGGGACAGTCACCGGTCATGAGGCTTTAGTCCCCAATCGGACGGCCAACCGACCATGATTGGATTCGACGCCCGAATCCAAGC", "TTCCCGCGGATCAGATCTTGACCACCGGGAGTGTCGATGAACTTCTCGCGCTCTTGAAATGACGGGCTATCGTAAGTTTATGGCCTGGGGGAGCGTGAATCCCGCTGGCGGTCGGGTGAACCGCCCCGGTTTTCTTGCACCCCGCGTCGACGTGCCAGTGACGAACTTGACGAATAAGGCCTTTGGTCCTTTCCGGTAGGGGTCTTTGGATAGGCGCGATCCTCGGCATCGGGCCGGTAGCTTGCCGTTT", "GGCCAACTGCACCGCGCTCTTGATGACATCGGTGGTCACCATGGTGTCCGGCATGATCAACCTCCGCTGTTCGATATCACCCCGATCTTTCTGAACGGCGGTTGGCAGACAACAGGGTCAATGGTCCCCAAGTGGATCACCGACGGGCGCGGACAAATGGCCCGCGCTTCGGGGACTTCTGTCCCTAGCCCTGGCCACGATGGGCTGGTCGGATCAAAGGCATCCGTTTCCATCGATTAGGAGGCATCAA", "AAACTCGGGGAAGAGGGACCGCGGGTGGCGCTGAACGGGAAGGGTGGTGGCCATTTGATGCCTCCTAATCGATGGAAACGGATGCCTTTGATCCGACCAGCCCATCGTGGCCAGGGCTAGGGACAGAAGTCCCCGAAGCGCGGGCCATTTGTCCGCGCCCGTCGGTGATCCACTTGGGGACCATTGACCCTGTTGTCTGCCAACCGCCGTTCAGAAAGATCGGGGTGATATCGAACAGCGGAGGTTGATC", "CATCCATCGTGCCGCGCGTCGGCGAGTCCTGTTGATGCGCCACACATTCCGCAGGCATCGTGAACGCTTGACAGCCGTCGCCATTGTCGCGCACAAACCGCACGTCGATTCGTGATCCATTGAGGACCTAAGCCCGTTGGGCTAGTGACAAACGCCTCCTGAGCAAAACCCTCCTCCCCCGTTACCGTCGTGCGGTAGGGACAAGCCACATCGGCCGAGCGGGCGATCAGCCAACGACAGGAGGACCGCG", "GTCGATGCGAACGCAAGCATCCAGGAGATGCTCAACGTCATGGAAGAACATCAGGTCCGCCGTGTTCCGGTCATCTCAGAGCACCGCTTGGTCGGAATCGTCACCGAAGCCGACATCGCCCGACACCTGCCCGAGCACGCCATTGTGCAGTTCGTCAAGGCAATCTGCTCGCCCATGGCCCTCGCCAGCTAGCGACCTCGGATCATCCGCCGGCACGAAAGGCTTTATCCGCCAGCATCGGAGGTACCCA", "CCGATCGGCATCACTATCGGTCCTGCGGCCGCCCATAGCGCTATATCCGGCTGGTGAAATCAATTGACAACCTTCGACTTTGAGGTGGCCTACGGCGAGGACAAGCCAGGCAAGCCAGCTGCCTCAACGCGCGCCAGTACGGGTCCATCGACCCGCGGCCCACGGGTCAAACGACCCTAGTGTTCGCTACGACGTGGTCGTACCTTCGGCAGCAGATCAGCAATAGCACCCCGACTCGAGGAGGATCCCG", "ACCGTCGATGTGCCCGGTCGCGCCGCGTCCACCTCGGTCATCGACCCCACGATGAGGACGCCATCGGCCGCGACCAAGCCCCGTGAAACTCTGACGGCGTGCTGGCCGGGCTGCGGCACCTGATCACCTTAGGGCACTTGGGCCACCACAACGGGCCGCCGGTCTCGACAGTGGCCACCACCACACAGGTGACTTCCGGCGGGACGTAAGTCCCTAACGCGTCGTTCCGCACGCGGTTAGCTTTGCTGCC", "CACCTGTGTGGTGGTGGCCACTGTCGAGACCGGCGGCCCGTTGTGGTGGCCCAAGTGCCCTAAGGTGATCAGGTGCCGCAGCCCGGCCAGCACGCCGTCAGAGTTTCACGGGGCTTGGTCGCGGCCGATGGCGTCCTCATCGTGGGGTCGATGACCGAGGTGGACGCGGCGCGACCGGGCACATCGACGGTCCCCGGGGCTTTGTGGGCCAGTGAAGTGACGAAAGACCCCAGTGGACACGGACTTCGGC", "GTGCCACGACGCATAGAAGACATGGCCATGCCACACCCTGATAGCATTGCAGCAAGCTACATGTACTGCTCTACCAGGATCCTTATGGGCAACAGTGGGTTTGAGTTATGAAACCCGTGGGCACATACCCTTCCGCGTCGTACTGGTCAGTCTCGACAGCGAAGAGATCACCGGTTGATCCACCAAGCATGCATTGGCGGGCATCTGCATAAACGGTGACGTATCAGCACAAAACAGCGGAGAGAACAAC", "GCGAGTACGCTAGTTCAGGTGGGTGCCGTGCCGAAGGCGGTGTCACTCAACGAACTTCGGTTCTCGCAGGGTCGCCACGGCTGGCGATGTGCGGTAACGCTCGATGTGTGAATTGAGACCTGATTCATGAAAATCGTCGAGGAGACCCCATACCGGTTCCGGATCGAACAAGAGGGCGCGATGCGGGTGCCCGGGATCGTGTTCGCGTCCAGGTCGTTGCTGCCTCGTGACGAAGGCGACATGGCCCTTG", "CTTGAGGTCCAGTCCGGCGCAGAACACCGGATCGGCGCCGGTGAGGATGACGACGTCGATGTCGTCGTCGGCCTCGGCGTCGGCCAACGCCGCGAAAAACCGATCCCGTAGCGCCGCCGAGAGCGCGTTGCGGGACTGCGGCCGGTTGAGGGTGAGGGTTCGCACCCGTTCGTCGGTGTCGATCAGCAGGATGTCGTCGGTCATTCGATCACCGTAACAGGACCGTTAGACTGTCCTAATGACCAGAAAA", "CGCGCGAGATCTCATCGACAACCCACTTCCCATGCCTCACGACGGTCACCATGTCGCGGGCATATTTACGTGAGGCACCGAGGGTGTTTCGCGGGCATTCTTGGTGAGTCAAGTCGAACGGTTGAGCCATGATCGACGATTCCGTTACCGTGCTGTCAGAAGACGAAAGTTGGCACCGGCTGGGCAGCGTTGCACTCGGTCGGCTAGTTACCACCTTTGCTGATGAGCCTGGGATCTTCCAGTCAATTTC", "GGGGGCCCGGACGGCCAGGGTGAGAACCGTTCGCACGGTTTCGGCGTCCGGGAAATGGGTGTTCATGGCTGCCGGGCCTTTCCCATCAACGGCTGCGGTCATCTATTAAGGATCGCGCGTCGACAGCCGCGGTGGCAGAGCACGAAGGCTCGCCAGCGGAGGACCTTTGGCCCTGCCTCAACGGCTCCTCGCAGCGGAGAGTGGTACTGACGGTTGCAGATAATCCGGATCACCGGGGAAGGCGCTGACC", "ACTCACGTGCCGATCCACGTCTTCTGCCTTGAGAAACCCGGCGTCAAGTGTCGTTAGGTGATTCATGGTCAGCGCCTTCCCCGGTGATCCGGATTATCTGCAACCGTCAGTACCACTCTCCGCTGCGAGGAGCCGTTGAGGCAGGGCCAAAGGTCCTCCGCTGGCGAGCCTTCGTGCTCTGCCACCGCGGCTGTCGACGCGCGATCCTTAATAGATGACCGCAGCCGTTGATGGGAAAGGCCCGGCAGCC", "GTTGGCGCATGTACACCTGAGCCGTCGGCTCGCCCACTGGACCCGGCTCTACCCCGAGGTGCGGGTGGATCGGGCCATCGCCGGCGGCAGTGCGTGCCGTCATCTGGCCGCCAACGCAAAGCCGGGTCAGCTGTTCGTCGCGGACTCACACTCCGCGCACGAATTGTGCGGTGCATACCAGCCCGGATGCGCCGTACTTACGGTACGCAGTGCCAACTTGTAGGGAGCGGATCTTGGGAGTGGTGCCCTG", "GGCAGCTGTCGGCAACTGTAAGCCATTTCTGGGACTTTGCTGTGAAAAGCTGGGCGATGGTTGTGGACCTGGACGAGCCACCCGTGCGATAGGTGAGATTCATTCTCGCCCTGACGGGTTGCGTCTGTCATCGGTCGATAAGGACTAACGGCCCTCAGGTGGGGACCAACGCCCCTGGGAGATAGCGGTCCCCGCCAGTAACGTACCGCTGAACCGACGGGATGTATCCGCCCCAGCGAAGGAGACGGCG", "GTTGTCGATGAGATCTCGCGCGGAGGTCACCAGCAGGTACGCCAAGGCGTATGTGCAGGCTTTGAAGAAGAGCCGGGGCCGGATTTTCGACCAGGTGGTTGACCTGACGGGCTAGTCACGTGATAACGCGCGGCGCCGGCTTGTCGCAGCGGCCAAGCTATCGCCGGGGCTGGGCCGCAGTGTTGCCAAGCGGCGGCGCAAACCGCGTTCGCTGAAGTACTCCTATGACGCGCTGAAGGTGTTGCAGAGG", "TAGAGGGCTCCGACGTGCCGGTGCCAGCCGCCGCGTTCGAAACACAGCCCTAACGACACGCTGCCGAATATGACCCGTGTCGGAAATTAGGGCGACAAGAGTAATGCGGCTCAACATAGCCTTGCTTTACTTAGGCAAACCTGCCTTCAACCAGGAGGTTATTATCATCCTGTGGTAACTAGGAAAGCCTTTCCTGAGTAAGTATTGCCTTCGTTGCATACCGCCCTTTACCTGCGTTAATCTGCATTTT"]
# print(many_runs_gibbs_sampler(dna, k))
# t = 36
# res = (many_runs_gibbs_sampler(dna, k))
# for item in res:
#  print(item, end = ' ')
# pattern = 'AGCACC'
# dna = ["AGCGAGGTTTTGGACTACCAGCTTTTAGTCGAGGCTAGGTTTCTCATCACTTTGTCGTACAGGATGTTGGTGTTTGACCGCCGCAGTGCCAGGCTTGTATTG", "GACCTTGGTTTAGTCGGGAAGGGGGTAGTGTATCGACATGCGAGCTGTTGTTACGGAGTTTGGGTAATAATAATTACGGTAGCACCGGGGCCTGTCCGTTGA", "GGCTGGGTCGCTCACTTTAACAGCCAAATAAATGGTTATTTCAATGGTCGCTGGATCGTAATCACACGAAGATGTGATAGGGGGCCTCTGTTTTTTACTAGT", "CTTGGCACCTATGTAAACCTCATTGAAGAAACAATGGCACTACTTCGGAAACGGTAGTTCTGCAAGAGCGCATTAGGAAGGGGAACATTAATGGCAGACTTC", "TCCAGGACCAGGGAGCCAAGGATCCCAGTCTATCATCAACGATCTACTATACTTCCGATTTTGCACTTTCCGTGGGAATCTAGTGCGATGGGAGACCTGAAG", "GCGGAGGTTTGAAGTAGAGCATGTCAAAGCGGTTTGGAGATCGCACCGCGAGGTAAGAGTCTACGAGATGAGATCTCTCTATCTTTTTATTCGCTTCACTCT", "ACACATAGGGCGGCGCCTCTCCGATAAGCCAGCCGTTTTATTTATTATACGTCCCTGTTAACTACCTGCAAGCCCTCAGGGTCGCCCCTTCGGTCGTTACGG", "GTCACGTCTACCAGTCAGGACATTTTCTGGTCCATACCGAACAATCCGTCATGTTATAGCCGTCTCACGGGGGGTCCGAGCCGTTAGCGGATAAAGGAGGTG", "CGCTGCTTCGGCAAGGCGTGTAGGAAACACTCGGTAGCTCCCGGGTTAACGATCAACTCTTACCTCATCATCTCAAGTGGTTGACAGGTTGTCTTATCATAG", "GCGTAGCTAGGCGCCGTAACTGACTGACTCTTCACAAAAGGTCTCAGGAAATGTTCTAGGCCAAATGACTACGATCGCGGAGAGTTCGTGCTTGTCCGACCC", "GAGCATCACAACCAGTTATGTATTGGAGGCACGGCTAGGAGCACACGCTACGCTGTGTAGCATCTCGGGTTGCAGCTAACAGCTCAAAGGTTTGCCCGTTCC", "ACGATATGGGTGAGAAGTGCAGCGAAAGACAAATTGTCTTGCCGCGATTAAACCTCCTGGCGTAGTTCACTCGGCTTTCCAGAGATCATGGACTACAGTGCG", "GCCTAGGAGAACTGCCGGCTCCGCATTCGCGCCTCGGAGTAAACCATTTCCCCATCGGTTGTGCGTGCTAACTGCGGCAAGTACACAAGATGGTCAGTTCAG", "GTACACTACGTGTGAAATCAACCAAAACTCGATGGTACAAAGCTTTATGAGCACTCCAAGCAGCTTTTAAGCAATCTACCACAGATTAGAGGTCCGGCAGGT", "GGAAGATATATCTTTCGGAACCTCTTACAATAATATAGGGCGTTGTCTTTCCACCGGACACGCCTCGAAGATACCTGATAAAGTGAATACCCCCTTCTTAGC", "TTGGTCCTTAAAAATGGACGGGGTGAGCTAGGGGTATCACGGACGTCTAAGGACCGCTTCCCCGACATGTTCGGCAGAGTGGAAATTCGCTGGCATCGTGCA", "GGATCCAGGTGACTTTAGAGACCGTCCACCGGTACGTGGCGCTTAGAGTCAGACTGTTCGTGCCCCTTATTGGAATAAGTTAAATGTACGTGTGCGTGTGCG", "TGCGCAGGCAGTTTCTACTGTCCACTATGGGCCTCCCTCATTACAGAGGGATTAGAGCTGTAGCGCGACTACTATGTTCGATCGATTCCAGTCTTATCGCTA", "GGGGGCTTCGAACCACTTTCATTAAGGGTGACACTGGTTAATCCACATCATGTGCCCTGAGCCCACCTAACTACGCTTCCCCTAGGCCCTTGCGGCCGTGAT", "CTGGCCGAGGTACTAGCCGCTCGCTGCGGTCTTCTGACCCTTCGGGGTCAAATTGAATCCTAGGTAGGCTATGCAACGGGACTCGTGACACAATAGTATATT", "GCGCCGACCCCACAACGTAGTCGTGTTCGACGAACATGACGAAACTGAATAGTGAAGGGCGATGGAAGATCAAGTTCTACCCGTTCTCAGTAGTGTAGAGCA", "TAGGTATCTACGTAGGGGCGGGCCAGCTGCTATATGTTGTTGCTGCGTGGAAAAGCCATGTCTTCCCGGAAATGTAATCGCAGGTACTTTACGTACCCTCAG", "GCCTTCGATGCGTGGTATCGACCGAGAGGACCGCAGAGTGCTATACACATCCTGTCTAATATTAATTACAGTGTGGCTATCGGCACGGCACTTTAATAAAGG", "TAAACAGCAGTTAGTAGGCTAGGGCTCCCGAGTGAGGACGCGAGCGGATGGAGAACCGGCAACGAACAGAACAATAATCCACTTACCGATCAGGTTTCGGTG", "GCAATAGTGTGGTATTAGCACCTAGTGACGCGGCGGTATAAAAGAAATACTACGCTCTTTTATTGTCTGTCCACAGGGCTACTATGACCCATCTAACTAGCA", "AGGACGTCTAAAGAGCACGTTGGCTGTCAACGTGGCAAAAACGAGACGGGTATTATAGAAATCTCTAGACAGCCTTCGCTTCGACGTGAACAGGTCTACATT", "CGGGGAAGTAAAGGTCAGTCGGCTAAAGGCCCCAGAATAAATCCTTGCTGACATAGTTCACTTTGGTAATAGTTCAGGGTATTTATTATGATGTGCGGTCAT", "TTGTCCACTCGCCGTGATAGCCCTAACTGGGGGGAGGACTGTTGGGCTGAGCCCTAGCCGAAGTGCTGTTACGGGGTAAGGTAGGTACATGTGGCATGCCCT", "TGTCGGTCCGCTCTATCGCTTGTCTGGCAGCTCGCAATGCGACGTCTTGTTCGGCACAGCCGTCACTACGGAAGCACCCAGATTGATGTGGTACCGACATAA", "CTTGCTGGATTGCTTGCCGACAATTTTTTCGCAGAATTTAATAGTGATTGCAATTTCGAAAGAGCCAGAAAAGCTGGTAAGATGTTCAGTACTAAGCTTAGG", "ACAGATCTGATGAGGGTCCACCGCACGTTCCGACGCTACTCGTTTTTACGCTGTCCCCCCACAACCCGCCCGACGCCGTGTCCGGGGAGTGGACCACACAAA", "CTTGGCGAGATTCCGTTATACAAGAGCCTTTACGCGAGAGAGGCACTACTACTGACTACCTGGACCCCGAGGGGCTTAGTGGTATAATGCTTACCGCAGCAC", "TGGCCAGATGTGGGTGGGAGGTAAGGACCTGATCCCTAATAGGAAGTCGCCTGATGTTTGGATATGGGTCGATTTGGGTGCCCCCTTTAGTTCCAGGGATAC", "AAAACAGTCAGAATCATGGACCGGAATTATAGAAGTGGCCCGTGTATAGCTACTCCGGTAGTAAGCGCTAAGGGCAGCTAGTCGGCAGATAACATACAGTGA"]
# print(distance_between_pattern_and_string(pattern, dna))
# dna = ["TAGTTAAGGAGGATCACTGTCTTGGAGTCCTCCGCCCCCAACCCGTGTTGATTCCTACCCCCGCGCAACACACCTGAAATTTGTCTTTCCCGAATGGCGACTCACTATCAGCGCGGATGAAGCGATTATTCCCTAGTAGATTGTGCCCGGATGTCT", "TCGAACGTTTGGTAGTTGACGTGTAGCTGCTTGGACGCCTTGAATGCCCGAAAGCCTGATTGAATCAAAGGTCTCATCCCCAGTGTTAAGAACAGTCCTTTCTTCGAGGCGCTACAATTTGCATAGGCTAGGTTGCTGCTACGCGAGAGTAGAACA", "CGGAATGTGTATCACAACCCAGGTAAAACCTTTTTAAGAAACGCAATGAGTACATTTCGGGAAATGCTTGAATGCGACTCGATTAGTTATCGCGCCCCCTATAATCGGAGAATCTCAGGCGATACTACTAATTTGCGAGGGGTTGGTCGACGAAAA", "GAGGGAGCGTGCCCCATCCCGTGTCCTTTATGGCAGGATGCCTAATGAGAAGCCCTATCCCTTTATTCTCTATTCACATGCGTCTAACGGCAGTGTAAACCAGTCGGCCATTAGCTGCATCACATCCGAAGCGAATTCGTTTTCACTACACCCCTT", "ATAAGACAAAAATGGAGCGATCATGTACTCTCGGATCATCTGTCAGTACGGCGTACCGGGCGATTAAAGATTGAAAATGATATGTCGTGGATCTCTCACTACTGATACCGCGGGATGTACACCCAGTCTAACAAGGGCGACTCTCACATCCCCGGT", "CCGTCACTAGTTTGGCGGACTACCCCATATAAGGTCGCTTTCGTGTAGCTCACAGGTGGCTTGGGATTCCAGGGTAGCTGAATACCCAGCCCGTGTGGCTGATGAGGTTCGCAAAGTTATGGAACTTCTAGCTGGGGCGCTCTGATACAGAATGCC", "GCTCAGACTCAAGGCCAAGGACTCTACATCTACGCTTCAATCCTCCGCCGAGTTAATTTCACTGCTTGGCTTCTCATCCCCCGTCAGGCACATATTGGCTAATAGCACAACGCAATGTGCTATCTCCTCGAAACGCCGGACACTTCTGACCGGCCA", "GAATCGGTGAGGATTTGTAGGGCGAATAACTAATGGTGAGGCGGGGTTTAATATTGTATTATTTCTGAGCACGATCTAAGGTGCGGTAGTGGGCCTAGAGCGGTACGGTAGTAAGTGGCTGTTGGACCAAGTCGCTGTGACTGGCACAGCCCAAGT", "ACAACTACCTAACACGGTACCTTGCGGCATGCGGACTTTAACCTTGGCGGTGGTATTATTTCCCTCCTTCCCTAAAGAGCAAGGAAGCGGGTAATTGGTAGACGCACGTCAACGCCGCACGTTTGCTCATACTGTCTATAATAACACACCCCGTGT", "AAAGCACATAAGCTGTGCAGACGTACATGGATACTATGCCATAATGTCTCCTAGATGCGTGTTATCTCCGGACACACCCCCGGTATCTACACTGTTTAGAGCGCAGCACGGACTCACCGAATGACGCATAAGAAACGGAAAGGATTTTGGTATACA", "GCACTACATCGCAGGTTGCAAGTTACTGCAGGTCCAGCCTCACTGGGTATTCAGAACATTTCCATTGCGAGGACATGGAGCAAACCCTCATAGTGTCCGCGTAGCAACCGAGATGCTCTTTAAAAGACAGCCCGCAACCCTAGTCGTGACCCGCGG", "CTCAGCCCTAGTAGTCCCCCTCCTATTGTATACTTTAAATCTTTCGGCGCAGAGCCACCGTTGACATGGTAACAACGGCATTCGATCCTTACGATCCCGGTCGGCAATTCCAAAGAGACTCGGTAGGCGGCCTAGGCTCTTTCGGAGTCTCTTGCA", "CTCAGCCCTAGTCGGAATCGCAAGACGATAAGCAGTTGTGGACGACTATGGATTGACCAAGCACAGCAAACAACGTAGCTAGAACCTTTTGCCAGGGTCCAGGAGTACGCGCTATCTCCTTGTTAGCCCACAATCAGCAACAGGACCCCTCGAGCA", "CTCTCGCATTCGGTCCGAATTGTCCTCTTCCCGGTGAGGCTCTACAAGAATGTTCAATGAGTTTTGTAAACACATCCTCACCATAAAGGTCCGGTTTCGCGGATTTACCCCATCCCAAGTAGTTTGGATAATTGTCGCCCCGATATCCGTCCATCG", "GTTCTAGTTCGATCTATGGAGTGCTCACAGCTCGTCCTGTTGTAAGGCACTACAGATGTAATTCGATGAACGCTCAACCCCGGTATAAACGACTTTCCACACCTACAAGTATTTTTCGGACCTCCTGCAGGAAGCTTATACTCAGCCGCTACAAAT", "GGTTATTCGGTAAGCCCCCGCCGTATGTGAGGGCGGTCAAAAGTGCAACGGCCGTACCGGCCGTGTGAACAACCCACCCCTGGTACAGGCAGCAGAAAGGTTTCGCCGATTGTAAAGTTCCGAGTCTTTGGATTTAGCCAGCGAGAGCTCGAGATT", "AAGAATTCAACAGAATAGTGTACCAAGAGGACCACGCACAACCCAGGTAAAATTCAGCAAGACACCGAGCGAAGAACTCGACCATGGAAAGTCGCTACTGGTAGGCTTGACCTTCCAGATCTATAATTCCTAGACCCGGGAATGTCACACCCTTGT", "CCCTTGACCGTAATTCTGCCCGGGGACCTCTACGCAAAGAATCAGTTACTCATCCCTAGTGGAAGCCCGTAGTGTTTACGAACGTGAAAATATTAGTTAATGCAGCGACACATTCCCCAGGACGATGCGCGATGCATAAGCTCCCGGGGAGTAGCC", "TACCGGCATAAACACATATTAGCTACAATGCATAATTCTTCTGGACGCACGTTCCTTAGAGACTAAGCTCCCCCTATGAATACACAAGAGGAATCCCGCACCCCGCGTGCCTCACTCGTGTGTAGCAAATCCTCAGCGCCTGCTAGTTCTTCTAGC", "CGCAACCCGTGTAAAAATCCATTTTATCTCCATGTATATAGTAAACCGGGAAGGAGTCGGCTGCAGTGCCGGTACTGGGAGTCCCAAGGTCAGAGTGAGGTCGGACGGGCTACTCCCCCGTTCCGGTTTACTCCGGATTGGCCGAAGATTAAAGGT", "AGAGCTATATGAACCCGTATACAATATAAGAGTATTCTTCCGACGGCTCGATACTTCAAGCCCATCCCACGTATTCCCTACAGGCCACGCTGGTAACTAGTTTACAAATCTCCAAATCGCACGATACCGGTCATGTGGCCTGGCTAGGCAAGCGCG", "CTTAATAGTAACCGCAGCCCCGGTGCTGCAATATACCCAATCCAGTAACGCATCTCATACACGGGCACGTAATCATGACTTGTAACGACGCGCCAATGACAACTCGTTCTCAAATCCGCACATAGTACGCGATTATCGCCGAATTGTCCTGATATT", "TGCCCGTATCTCAATTCAGAGCCGCAGGTTAAGCTTCCCACCCCGTGTGGCGCCAAAGCATACCTACCCTGCCGGCCCACCGAGTACTGTTCTCTACCAGGAGAGTGCGCCAATGTGGCGCGCATTCCTAGACGAATAACACTCTCCTGAAATTCT", "GTCGTCTTCTTGAATCGAGGTATGCACAGAAAGATGCGTCCTTACTCATGTAAATCTTAACCTCCAACGGTGTAAGCCCGCTGGCCCATCCCATGTGGCGGTCTAACCCAGAAATGCTTCCAATCCAGGATAGTTCATGTTTTTCTCAACTGCGGG", "GGCCGGTCACGATTTGGTACGATGTTTTTTCGACCGACCTCCACTCTGTCGCAGCTTTTATAGGCTAGACCACGTACGAGGTAACCCAACCCGAGTGCGACCAATTGCTTTCGTGTGGCATGGGACCGGGTAATCCCTAGGAGCTCTCTTCTGTAC"]
# k = 12
# t = 25
# res = greedy_motif_search_with_pseudocounts(dna, k, t)
# for item in res:
#  print(item, end=" ")
# dna = ["TTGAGTAGTATAAATTTCACGACAGACCGACAATCACTCTTA", "TTGATCGGCAGCGTCCTGTTGGTAGACGGATTGAATCCGTTG", "TTGATTTTCGTTACACCAATATCCACCCTGGACTGGAGAGTG", "CAATAATTGATTTCCTACCAATTGCACTATCTGCGGGAGGCT", "GACCCCAAGGTGAATTTTTTTGGCTTGAGTCAAACAGGTTTA", "TCTCTCTATTGGTCCGGTTTATCTATTATCTTGAATGAACAG", "TTGATTAGACTAGGTTGGGAGGAACTAACTTAGTGGATAACT", "CTGCGGTGAGGTAGTTTCTTGAGTCTTCTAACTCTTTGTGGC", "TTGAACGCTTGCGCACATACCAAGTATAACCAAAGCTTGAAT", "GTTATTAGGAGTAGATGGTTGAGTCAATAGTCGTCCGCGGGA"]
# k = 6
# print(median_string(dna, k))
# dna = ["GCACATCATTAAACGATTCGCCGCATTGCCTCGATTAACC", "TCATAACTGACACCTGCTCTGGCACCGCTCATCCAAGGCC", "AAGCGGGTATAGCCAGATAGTGCCAATAATTTCCTTAACC", "AGTCGGTGGTGAAGTGTGGGTTATGGGGAAAGGCAAGGCC", "AACCGGACGGCAACTACGGTTACAACGCAGCAAGTTAACC", "AGGCGTCTGTTGTTGCTAACACCGTTAAGCGACGAAGGCC", "AAGCTTCCAACATCGTCTTGGCATCTCGGTGTGTTTAACC", "AATTGAACATCTTACTCTTTTCGCTTTCAAAAAAAAGGCC"]
# k = 6
# motifs = best_score_from_random_motif(dna, k)
# for item in motifs:
#  print(item, end=" ")


# dna = ['TTTCTACATCAGACTCTTGTCGGGTCTTCGGGTTTATAGGCC', 'TGCAGGAATTTACTTATCCATCAGTATGTGTCAGGGAAAGTG', 'TAATGGTGTGCGCACCGAGAGACGCACTCTCATCAGCGACTT', 'CAATGTGATCTTCATTAGCCTCATAAGGAACAAGTGGCACTC', 'CATAAGGTAGGTGACCGGTCGCTTTCTGCTGACAGCCCAATA', 'TGCCACTCGATACATCAGTACCCTCCATCCAGTGGGAGTCGC', 'CATAAGGAGATTTTGGCTTGCAGCGGTCGTTTCGCTCGCCCG', 'TCTACGATCCGGTGAGAGCATGAGTACACATAACCGAGTCTA', 'CCTTCAAAGACTATTCCGCATAAGGTCAGATCTTCCTATGGC', 'TACAGACATAAGGGCAGCTCCTTTAAAAAGCCCTCTCTCACT']
# k = 6
# print(median_string(dna, k))
# dna = ['TGGGCAGTTCCACGCTCCAGAGCTTTGTCGCAAAGTGACCTTTCCTCCAACAGGGTCTAGAGCCCCTCGGGCCCCCGATCTGGGCACGATGATTCCATTTACATCATTCTACGTCGTTTTTTTAGCTGTGGAATAAACTGACGGGAATAATAACTC', 'GCGAAACGCCTCTGCCTGGGTATTCGACTTTTTGATTGCTTACGACAACAAAAGGCCTTTAATATTCAACGAGCCCAATATGCGGGGTTTTTTTCTCACCCTAATTTCTATCGGTTGTCCCCACAAGTGCATCGAGCGGTTTGATTCCAAGCTCCT', 'CGCCCGCATCCTACCCCATGTGAGCTGCGTTCCGCGTATCTGAAAGAGTATTTCCAGGTACAAAGAAACGACACGTGATCTCACATGCCTATCGCTAGTCCCCTACTTCTTCGCTGCCTAACGTTAGATCGAATATATTCCTGAGTCAGCCCAATG', 'GGTTGCCCGGATGCGGCGGAGCGTTTTGGTTGACTTCTCTCCGGAGCACTTTATCTCCAGTCCCGATGTGCGTCGACTTTATAGCTAAGCAGTAGACCTACATCCCGGTCATGATAATACAAACTCAAGGCCGTGGTAAGCTCCTTTGACCGTCTT', 'TTTTGTATATCAGAATTACGGTACATCGGGGACCACATCCCGCCATATAGACAAGCTGCGGAAACCCTGTACGTTCTTTTCATTCAGGGTACCGGGCGGAGATTAAACGATCGCCATAGCTCACTCTAACATGGCGCAGCCCCCGCCCAATATGCG', 'TCCAATTCTAGTTAATTACCTAACTGATTACTTGTTCATACTCCAGAGGTAAATCTCGGCCCAAACCAGTGGGGTTTTTAAGTGACCCTATATGCGTCCGGCTCCGGACCATAACGGGGTGGCTCGTGAATGTAGATGCTGCACGACCATGCGCCG', 'ATGGGCGTCGTGAGTGACTAAGTTTATGATGTCGCAACCCCATGTGCGGCCATGGTTGGAAAGGTCCTAGGTAATGGTATCATGCCCATGTTCAAAGGCCGTTTTTGATCGCGACACGAGAGCTCTGAGCAGGCAGCTCTACATTACTTAGCTCAC', 'GCCCAATATGCGATGCTCCCTCATCCGTGAGAAAAAGATATAGGTGGTATTCTAATATGGGGGTATCTTGCTTTCATGTTGATCCTGTGGTCCATCGGCAGCGAACGGGGTTACATCGGTGAGTATCACTTGTTTCCCGATACCTCTCGGCAAGTA', 'CGTCTCTGATCAAGCGTTTCCTATATAACCCAATACTTTTATGGATTCAATACCCGCAGCCAGCGTTAGGTGTTTTCCTACATGAAGCCAGGTTCTGGACTATAGAAGGACATTACGTGTGCAATCTCACTATCCCCATCTGCGCTATTGCAGAAG', 'GAAGTTGACGGCACAGCGACAACGGAACGTCAGGTATCGAGATCCCATGCTATGCACCTGTGGGACTCGTAGCTTATCGAACGGAAGGTTATTCTAGTACCAGCAAGTAGCGAATTACATAGTGCGGTCAGCTCGGGAACAGTCGCCCAATGTGCG', 'GCCCTATCTGAGCACCTATGATCCGGAACTATAGATAGAATTGTGAGTCAATCTTCTAAGGCGTCTTGTGATGTCTAAAATCTCCAGTGAACTGTACGAAGCACAAACAATAAATGTTTGCGTAAGGGTAGCCACAACTGTCGCGTCACCGCCCAT', 'CAATAGCTTCAAATATTTCCCATAAGGGCGCGACACGGTGTCGCATTATGTTAGCCTGCACGCTCGTAGCATGCCCAATATGCGGGAGCTGAAAAAAAACAATAAGCGTATCTGTAATCGAACCATAATCCGCCTTATATGGAGAGAACCCCACAG', 'GCCCAATATGTGCACCGTTCGCACTCTTGTCATTCATGGCGCCGCCGTGCAAGCACGACCGCCTGGACACAAGTGTGGACCCTTTCCCTCGATCGTTGAGTGTCAAATCTTCAAATCTAAAATCTTTAACAGGCATATGAATACTCGCACATGTAC', 'TGACCCAGGCTCGTACTATTCGCCCGTTGCTAATTGCGTTATCGTGTCCGAGATCTGTAATTGAACAAGCAGGAACCCAAGAACTCCCAATCTGTGATGTGACCCCGTGACACTCCAGACCTACGTCCTTAATCCGACCCCAAGGAATTGGCCTCT', 'CCAGCCCCGGTAGTGCATGGGGGGAGACATGCATCTCTCGCCGTACTAGCCCAATCTGAGGAGGCGTGGCCCAGGCGACATGGATCTTAACAAGCGGATAGTATTGATCAGCTTGACTATGTAGGTTAGCCGCGATTCTTCCCAGGTCGTCATCCG', 'AAGGCACTATCGTGTTTTCGCTACGCCCCGGGCGGGGAACTTGATCATGACATATGCCGATCGTATCTTTTATAGGGCTATGCATCCCAATCTGTGGTAGCGGACCTAGAACCTCCGAAGCTCCCACGGAGTGGAATGCGACGGAGTATTAACTGG', 'CACTGAGCCACTGAGACCGCGGGCACCCTATATGCGACACCATGCGACGCTGCCAAACGTACGGAGTCGCGCACTAAGCTTCTCTCGAGAAGGACGCAATACGTGGCAGGTGCGACCCGCCATTCCCTTGCATCTAACTCGAGATTCTTGGGGGTC', 'GATCGACACTAACCCTTTTCGACGAATGCTCTCGCTTGGATCCTTAGCAGAAAGGCATAATGGTATCCTAAAACCCTATATGGGAACACCGGGTGGGCCGTTAAGACTTCAAACATAAGGGGCTTAAGAGTTTGTGCTTTTAGGCAAGCTCACATT', 'AGGAGAAACCTACGGAAGCGCTCCATACCTTCCCGCTTAAATTCTATGATCTAATATGCAACCCAATATGAGGTCAGACAAAGATTGTTTTAGATCACCTCGTTAACGGGCCCTCATCTACTCGCCTCGCCGAAGATTTCGTACATACCGGCCAGC', 'GATCAGAACATCATGTCCACGGGATCACACTCAAAGTTCACCTTTATCTGGCAGGACGCGAGAGGTCGTGTTGTTCTTCTCGCTGCCAAGTACAAGCAGAACATCCCGCCCCTTACTGGCTCCCCATCTGGGGTGCTTTTTTACAGAGAGGACACT', 'GCCCAATGTGGGTTGCCAGCGTCGGGGGGTCGGGTCTGTGGACCAAAGTCACAGTACTTCGACGTCGGCCTTATACGGTCGATCACGCCGATATAACGAGCTCAATCTAAGCCGAGCTACTTTCGGCTTGTTTGTTGCGCTCTCTAACATGAGCGA', 'CCTCCACACCCATAAGGTATTCGTCTCAATGAACTGGAACGGAAGTATCGCTCTCTCATAAAAATACATGTATCTGGAAAGCTCAGGGCACGGGGCTCCCCATCTGCGTTTTACACGTTGAACGCGACGTCTCTTCAAAATTGTTGTTCGAAGCGG', 'TCGGCGCCATACAGTATGAAAGTTGTTTTTTGAGGGTATCAGATTCGATCGCCGAGGCCTTTAGTAGAAGTACTACGCTTCGCGGGGGCGTTCGCACCCCTATTTGCGAAAGATGAACTGGGAGGTCTCATTCCGGGGCTTCTCAGTTGTATCCGA', 'GCCGCCACGAGTTCTTCCCTGTCTATGATTCACTAGTAGGCAATGCACGCTTGATTGGTCAGACCATGTTAGCCCCAATGTGGGCACGCTCAAACTGATGGTGCCAACCAGGGCTAATGGAGCTTCAGCTTCTATACCTTTCTCGCTGGCGGGCTC', 'TGGATCTTTATGGGGGATAATGATAGAATGGAGACTAACGACCCTACAGCGCGAACTCACGTAGCAGATCGAACGGTGATAGCGACTACGTTTTTTCATCGGATGAAGCATGTTTTACACAAAAGACCGAAGGGGGAAGGCTTAGCCCGATCTGCG']
# t = 25
# k = 12
# res = greedy_motif_search(dna, k, t)
# for item in res:
#  print(item, end=" ")

# text = 'abcdefghi'
# k = 3
# matrix_profile = 'abcd'
# print(profile_most_probable_k_mer(text, k, matrix_profile))


# dna = ['AAATTGACGCAT', 'GACGACCACGTT', 'CGTCAGCGCCTG', 'GCTGAGCACCGG', 'AGTTCGGGACAG']
# k = 3
# print(median_string(dna, k))

# dna = ['TTACCTTAAC', 'GATATCTGTC', 'ACGGCGTTCG', 'CCCTAAAGAG', 'CGTCAGAGGT']
# pattern = 'AAA'
# print(distance_between_pattern_and_string(pattern, dna))


# input = ["TCATATTTTT",
#  "CCCTATCCAC",
#  "GGGGGGGGGG",
#  "GGGGGGGGGG",
#  "GTGGGGGGGG",
#  "GGGGGGGGGT",
#  "GAAAAAAAAA",
#  "TCTCCCTTAT",
#  "TTTTTTTTCA",
#  "TTTTTTCCTA",
#  "TATTCCACAC",
#  "TCCTCCTTCC"]
# print(entropy_matrix(input))
# Dna = ["CTCGAACGTGTACTTCCTTCTCCCC", "CCCCCAATCTATTTCGGCCCCGGGC", "CGTCATCGCCCAACTCCTCCCGATT", "ATAGCTGACTGTTTGACCTGGCTCC", "CGCCAACACCGCCTAGCTAAGTGTG", "ACTGTATATCGGCAACACCCACCCC"]
# Dna = ['AAAAA', 'AAAAA', 'AAAAA']
# Dna = ['ACGT', 'ACGT', 'ACGT']
# Dna =  ["TCTGAGCTTGCGTTATTTTTAGACC" ,"GTTTGACGGGAACCCGACGCCTATA" ,"TTTTAGATTTCCTCAGTCCACTATA" ,"CTTACAATTTCGTTATTTATCTAAT" ,"CAGTAGGAATAGCCACTTTGTTGTA" ,"AAATCCATTAAGGAAAGACGACCGT"]
# k = 5
# d = 2
# res = list(motif_enumeration1(Dna, k, d))
# for item in res:
#     print(item, end=" ")


# genome = open('Salmonella.txt').read().replace('\n', '')

# # print(minimum_skew_value(genome))
# Text = genome[3764856: 3764856 + 500]
# print(Text)
# k = 9
# d = 1
# print(frequent_words_with_mismatches_and_rc(Text, k, d))


# pattern = 'GCGCCGTAC'
# d = 3
# result = neighbors(pattern, d)
# for item in result:
#     print(item, end=" ")


# print(d1_neighbours("ATC"))
# print(neighbors("ACG", 1))
# with open('approx_pattern_count_data.txt') as f:
#      genome = f.readline()
# pattern = 'TCGGA'
# mismatch_count = 3
# print(get_approximate_pattern_count(genome, pattern, mismatch_count))
# pattern = 'ACGAGCATA'
# mismatch_count = 4
# res = get_approximate_pattern_match(genome, pattern, mismatch_count)
# for item in res:
#     print(item, end=" ")

# with open('hamming_mismatch_genome1_data.txt') as f:
#     genome1 = f.readline()
# with open('hamming_mismatch_genome2_data.txt') as f:
#     genome2 = f.readline()
# print(get_hamming_mismatch(genome1, genome2))
# with open('data.txt') as f:
#     genome = f.readline()
# print(minimum_skew_value(genome))hamming_mismatch_genome1_data
# print(get_skew_diag_data(genome))
# print(get_hamming_mismatch('GGGCCGTTGGT', 'GGACCGTTGAC'))

# print(get_hamming_mismatch('abscabaxab', 'ab'))
# print(get_pattern_match('abscabaxab', 'ab'))
# print(get_approximate_pattern_count('TTTAGAGCCTTCAGAGG', 'GAGG', 2))
# import random
